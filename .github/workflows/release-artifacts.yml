name: Release Artifacts

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      custom_tag:
        description: "Optional custom tag for the image"
        type: string
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  release-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.0"

      - name: Build release binaries
        run: make release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker metadata and tags
        id: meta
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_PR_HEAD_SHA: "true"
        with:
          images: ghcr.io/buildwithgrove/path
          tags: |
            # For tag events (v*.*.*)
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=prod,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            # For main branch
            type=raw,value=main-prod,enable=${{ github.ref == 'refs/heads/main' }}
            # For custom tags from workflow_dispatch
            type=raw,value=${{ github.ref_name }}-prod${{ github.inputs.custom_tag != '' && format('-{0}', github.inputs.custom_tag) || '' }},enable=${{ github.event_name == 'workflow_dispatch' }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release Dockerfile
        run: |
          cat > Dockerfile.release << EOF
          FROM golang:1.23-alpine AS builder
          WORKDIR /app
          COPY release/path_*_linux_amd64.tar.gz .
          RUN tar -xzf path_*_linux_amd64.tar.gz

          FROM alpine:latest
          WORKDIR /app
          COPY --from=builder /app/path_*_linux_amd64 /app/path
          ENTRYPOINT ["/app/path"]
          EOF

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.release
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .

      - name: Create GitHub release for tags
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
          generate_release_notes: true
