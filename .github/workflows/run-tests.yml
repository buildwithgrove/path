name: PATH Lint & Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  # --------------------------------------------- #
  # Phase 1. Lint, Unit Test & Build Docker Image #
  # --------------------------------------------- #

  run-linter:
    name: Run linter
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Setup Git Authentication
        run: |
          git config --global url."https://${{ github.token }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout 10m --verbose

  run-unit-tests:
    name: Run unit tests
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Setup Git Authentication
        run: |
          git config --global url."https://${{ github.token }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Run unit tests
        run: CGO_ENABLED=0 go test ./... -short

  build-and-test-docker-image:
    name: Build & test Docker image
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and export Docker image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            IMAGE_TAG=path-image
            GITHUB_TOKEN=${{ github.token }}
          push: false
          load: true
          tags: path-image
          
      - name: Test the image works
        run: |
          docker image ls -a
          docker inspect path-image || exit 1
          
      - name: Export image to TAR file
        run: |
          docker save path-image -o ${{ runner.temp }}/path-image.tar
          
      - name: Upload artifact for use by E2E tests
        uses: actions/upload-artifact@v4
        with:
          name: path-image
          path: ${{ runner.temp }}/path-image.tar
          retention-days: 1

  # ------------------------------------ #
  # Phase 2. E2E Tests - Morse & Shannon #
  # ------------------------------------ #

  run-e2e-tests-morse:
    name: Run E2E tests - Morse
    runs-on: "ubuntu-22.04"
    needs:
      - run-linter
      - run-unit-tests
      - build-and-test-docker-image
    strategy:
      matrix:
        # TODO_MVP(@commoddity): Add F021 to the list of service IDs to test
        service_id: [F00C, F01C, F036]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          
      - name: Download Docker image artifact from previous job
        uses: actions/download-artifact@v4
        with:
          name: path-image
          path: ${{ runner.temp }}
          
      - name: Load Docker image
        run: |
          docker load --input ${{ runner.temp }}/path-image.tar
          docker image ls -a

      - name: copy Morse E2E config
        run: make morse_prepare_e2e_config

      - name: update Morse E2E config from secrets
        env:
          MORSE_GATEWAY_SIGNING_KEY: ${{ secrets.MORSE_GATEWAY_SIGNING_KEY }}
          MORSE_FULLNODE_URL: ${{ secrets.MORSE_FULLNODE_URL }}
          MORSE_AATS: ${{ secrets.MORSE_AATS }}
        run: ./e2e/scripts/update_morse_config_from_secrets.sh

      - name: Run Morse E2E Tests with Service ID ${{ matrix.service_id }}
        run: make test_e2e_evm_morse SERVICE_ID_OVERRIDE=${{ matrix.service_id }}

  run-e2e-tests-shannon:
    name: Run E2E tests - Shannon
    runs-on: "ubuntu-22.04"
    needs:
      - run-linter
      - run-unit-tests
      - build-and-test-docker-image
    # TODO_MVP(@commoddity): Remove the following line to re-enable Shannon E2E tests when `anvil` test chain issue is resolved
    if: false 
    strategy:
      matrix:
        service_id: [anvil]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          
      - name: Download Docker image artifact from previous job
        uses: actions/download-artifact@v4
        with:
          name: path-image
          path: ${{ runner.temp }}
          
      - name: Load Docker image
        run: |
          docker load --input ${{ runner.temp }}/path-image.tar
          docker image ls -a

      - name: copy Shannon E2E config
        run: make shannon_prepare_e2e_config

      - name: update Shannon E2E config from secrets
        env:
          SHANNON_GATEWAY_PRIVATE_KEY: ${{ secrets.SHANNON_GATEWAY_PRIVATE_KEY }}
          SHANNON_OWNED_APPS_PRIVATE_KEYS: ${{ secrets.SHANNON_OWNED_APPS_PRIVATE_KEYS}}
        run: ./e2e/scripts/update_shannon_config_from_secrets.sh

      - name: Run Shannon E2E Tests with Service ID ${{ matrix.service_id }}
        run: make test_e2e_evm_shannon SERVICE_ID_OVERRIDE=${{ matrix.service_id }}
