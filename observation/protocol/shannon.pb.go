// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.3
// source: path/protocol/shannon.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ShannonRequestErrorType enumerates possible relay request errors.
type ShannonRequestErrorType int32

const (
	ShannonRequestErrorType_SHANNON_REQUEST_ERROR_UNSPECIFIED ShannonRequestErrorType = 0
	ShannonRequestErrorType_SHANNON_REQUEST_ERROR_INTERNAL    ShannonRequestErrorType = 1 // Internal error.
)

// Enum value maps for ShannonRequestErrorType.
var (
	ShannonRequestErrorType_name = map[int32]string{
		0: "SHANNON_REQUEST_ERROR_UNSPECIFIED",
		1: "SHANNON_REQUEST_ERROR_INTERNAL",
	}
	ShannonRequestErrorType_value = map[string]int32{
		"SHANNON_REQUEST_ERROR_UNSPECIFIED": 0,
		"SHANNON_REQUEST_ERROR_INTERNAL":    1,
	}
)

func (x ShannonRequestErrorType) Enum() *ShannonRequestErrorType {
	p := new(ShannonRequestErrorType)
	*p = x
	return p
}

func (x ShannonRequestErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShannonRequestErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_path_protocol_shannon_proto_enumTypes[0].Descriptor()
}

func (ShannonRequestErrorType) Type() protoreflect.EnumType {
	return &file_path_protocol_shannon_proto_enumTypes[0]
}

func (x ShannonRequestErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShannonRequestErrorType.Descriptor instead.
func (ShannonRequestErrorType) EnumDescriptor() ([]byte, []int) {
	return file_path_protocol_shannon_proto_rawDescGZIP(), []int{0}
}

// ShannonEndpointErrorType enumerates possible relay errors when interacting with Shannon endpoints.
type ShannonEndpointErrorType int32

const (
	ShannonEndpointErrorType_SHANNON_ENDPOINT_ERROR_UNSPECIFIED ShannonEndpointErrorType = 0
	// endpoint internal error: not recognized.
	ShannonEndpointErrorType_SHANNON_ENDPOINT_ERROR_INTERNAL ShannonEndpointErrorType = 1
	// endpoint config error: e.g. DNS lookup error, TLS certificate error.
	ShannonEndpointErrorType_SHANNON_ENDPOINT_ERROR_CONFIG ShannonEndpointErrorType = 2
	// endpoint timeout on responding to relay request.
	ShannonEndpointErrorType_SHANNON_ENDPOINT_ERROR_TIMEOUT   ShannonEndpointErrorType = 3
	ShannonEndpointErrorType_SHANNON_ENDPOINT_ERROR_MAXED_OUT ShannonEndpointErrorType = 4
)

// Enum value maps for ShannonEndpointErrorType.
var (
	ShannonEndpointErrorType_name = map[int32]string{
		0: "SHANNON_ENDPOINT_ERROR_UNSPECIFIED",
		1: "SHANNON_ENDPOINT_ERROR_INTERNAL",
		2: "SHANNON_ENDPOINT_ERROR_CONFIG",
		3: "SHANNON_ENDPOINT_ERROR_TIMEOUT",
		4: "SHANNON_ENDPOINT_ERROR_MAXED_OUT",
	}
	ShannonEndpointErrorType_value = map[string]int32{
		"SHANNON_ENDPOINT_ERROR_UNSPECIFIED": 0,
		"SHANNON_ENDPOINT_ERROR_INTERNAL":    1,
		"SHANNON_ENDPOINT_ERROR_CONFIG":      2,
		"SHANNON_ENDPOINT_ERROR_TIMEOUT":     3,
		"SHANNON_ENDPOINT_ERROR_MAXED_OUT":   4,
	}
)

func (x ShannonEndpointErrorType) Enum() *ShannonEndpointErrorType {
	p := new(ShannonEndpointErrorType)
	*p = x
	return p
}

func (x ShannonEndpointErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShannonEndpointErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_path_protocol_shannon_proto_enumTypes[1].Descriptor()
}

func (ShannonEndpointErrorType) Type() protoreflect.EnumType {
	return &file_path_protocol_shannon_proto_enumTypes[1]
}

func (x ShannonEndpointErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShannonEndpointErrorType.Descriptor instead.
func (ShannonEndpointErrorType) EnumDescriptor() ([]byte, []int) {
	return file_path_protocol_shannon_proto_rawDescGZIP(), []int{1}
}

// ShannonSanctionType specifies the duration type for endpoint sanctions
type ShannonSanctionType int32

const (
	ShannonSanctionType_SHANNON_SANCTION_UNSPECIFIED ShannonSanctionType = 0
	ShannonSanctionType_SHANNON_SANCTION_SESSION     ShannonSanctionType = 1 // Valid only for current session
	ShannonSanctionType_SHANNON_SANCTION_PERMANENT   ShannonSanctionType = 2 // Sanction persists indefinitely; can only be cleared by Gateway restart (e.g., redeploying the K8s pod or restarting the binary)
)

// Enum value maps for ShannonSanctionType.
var (
	ShannonSanctionType_name = map[int32]string{
		0: "SHANNON_SANCTION_UNSPECIFIED",
		1: "SHANNON_SANCTION_SESSION",
		2: "SHANNON_SANCTION_PERMANENT",
	}
	ShannonSanctionType_value = map[string]int32{
		"SHANNON_SANCTION_UNSPECIFIED": 0,
		"SHANNON_SANCTION_SESSION":     1,
		"SHANNON_SANCTION_PERMANENT":   2,
	}
)

func (x ShannonSanctionType) Enum() *ShannonSanctionType {
	p := new(ShannonSanctionType)
	*p = x
	return p
}

func (x ShannonSanctionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShannonSanctionType) Descriptor() protoreflect.EnumDescriptor {
	return file_path_protocol_shannon_proto_enumTypes[2].Descriptor()
}

func (ShannonSanctionType) Type() protoreflect.EnumType {
	return &file_path_protocol_shannon_proto_enumTypes[2]
}

func (x ShannonSanctionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShannonSanctionType.Descriptor instead.
func (ShannonSanctionType) EnumDescriptor() ([]byte, []int) {
	return file_path_protocol_shannon_proto_rawDescGZIP(), []int{2}
}

// ShannonRequestError stores details of any errors encountered processing the request.
type ShannonRequestError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of request error, e.g. internal
	ErrorType ShannonRequestErrorType `protobuf:"varint,1,opt,name=error_type,json=errorType,proto3,enum=path.protocol.ShannonRequestErrorType" json:"error_type,omitempty"`
	// Details of the request error.
	ErrorDetails  string `protobuf:"bytes,2,opt,name=error_details,json=errorDetails,proto3" json:"error_details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShannonRequestError) Reset() {
	*x = ShannonRequestError{}
	mi := &file_path_protocol_shannon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShannonRequestError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShannonRequestError) ProtoMessage() {}

func (x *ShannonRequestError) ProtoReflect() protoreflect.Message {
	mi := &file_path_protocol_shannon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShannonRequestError.ProtoReflect.Descriptor instead.
func (*ShannonRequestError) Descriptor() ([]byte, []int) {
	return file_path_protocol_shannon_proto_rawDescGZIP(), []int{0}
}

func (x *ShannonRequestError) GetErrorType() ShannonRequestErrorType {
	if x != nil {
		return x.ErrorType
	}
	return ShannonRequestErrorType_SHANNON_REQUEST_ERROR_UNSPECIFIED
}

func (x *ShannonRequestError) GetErrorDetails() string {
	if x != nil {
		return x.ErrorDetails
	}
	return ""
}

// ShannonRequestObservations represents observations collected during the processing
// of a single Shannon protocol relay request.
type ShannonRequestObservations struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Service ID (i.e. chain ID) for which the observation was made
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Error encountered processing the request, if any.
	RequestError *ShannonRequestError `protobuf:"bytes,2,opt,name=request_error,json=requestError,proto3,oneof" json:"request_error,omitempty"`
	// Tracks endpoint observation(s).
	// Only set if the request did not encounter any errors, e.g. an internal error.
	// Multiple observations possible if:
	// - Original endpoint returns invalid response
	// - Retry mechanism activates
	EndpointObservations []*ShannonEndpointObservation `protobuf:"bytes,3,rep,name=endpoint_observations,json=endpointObservations,proto3" json:"endpoint_observations,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ShannonRequestObservations) Reset() {
	*x = ShannonRequestObservations{}
	mi := &file_path_protocol_shannon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShannonRequestObservations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShannonRequestObservations) ProtoMessage() {}

func (x *ShannonRequestObservations) ProtoReflect() protoreflect.Message {
	mi := &file_path_protocol_shannon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShannonRequestObservations.ProtoReflect.Descriptor instead.
func (*ShannonRequestObservations) Descriptor() ([]byte, []int) {
	return file_path_protocol_shannon_proto_rawDescGZIP(), []int{1}
}

func (x *ShannonRequestObservations) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ShannonRequestObservations) GetRequestError() *ShannonRequestError {
	if x != nil {
		return x.RequestError
	}
	return nil
}

func (x *ShannonRequestObservations) GetEndpointObservations() []*ShannonEndpointObservation {
	if x != nil {
		return x.EndpointObservations
	}
	return nil
}

// ShannonEndpointObservation stores a single observation from an endpoint
type ShannonEndpointObservation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Supplier of the endpoint handling the request
	Supplier string `protobuf:"bytes,1,opt,name=supplier,proto3" json:"supplier,omitempty"`
	// URL of the endpoint handling the request
	EndpointUrl string `protobuf:"bytes,2,opt,name=endpoint_url,json=endpointUrl,proto3" json:"endpoint_url,omitempty"`
	// Application address associated with the endpoint
	EndpointAppAddress string `protobuf:"bytes,3,opt,name=endpoint_app_address,json=endpointAppAddress,proto3" json:"endpoint_app_address,omitempty"`
	// Service ID of the session associated with the endpoint.
	SessionServiceId string `protobuf:"bytes,4,opt,name=session_service_id,json=sessionServiceId,proto3" json:"session_service_id,omitempty"`
	// Session ID of the session associated with the endpoint.
	SessionId string `protobuf:"bytes,5,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// session start height
	SessionStartHeight int64 `protobuf:"varint,6,opt,name=session_start_height,json=sessionStartHeight,proto3" json:"session_start_height,omitempty"`
	// session end height
	SessionEndHeight int64 `protobuf:"varint,7,opt,name=session_end_height,json=sessionEndHeight,proto3" json:"session_end_height,omitempty"`
	// Timestamp marking the sending of the request to the endpoint.
	EndpointQueryTimestamp *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=endpoint_query_timestamp,json=endpointQueryTimestamp,proto3" json:"endpoint_query_timestamp,omitempty"`
	// Timestamp marking the reception of the endpoint's response.
	// Only set if the endpoint did not timeout.
	EndpointResponseTimestamp *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=endpoint_response_timestamp,json=endpointResponseTimestamp,proto3,oneof" json:"endpoint_response_timestamp,omitempty"`
	// Error type if relay to this endpoint failed
	ErrorType *ShannonEndpointErrorType `protobuf:"varint,10,opt,name=error_type,json=errorType,proto3,enum=path.protocol.ShannonEndpointErrorType,oneof" json:"error_type,omitempty"`
	// Additional error details when available
	ErrorDetails *string `protobuf:"bytes,11,opt,name=error_details,json=errorDetails,proto3,oneof" json:"error_details,omitempty"`
	// Recommended sanction type based on the error
	RecommendedSanction *ShannonSanctionType `protobuf:"varint,12,opt,name=recommended_sanction,json=recommendedSanction,proto3,enum=path.protocol.ShannonSanctionType,oneof" json:"recommended_sanction,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ShannonEndpointObservation) Reset() {
	*x = ShannonEndpointObservation{}
	mi := &file_path_protocol_shannon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShannonEndpointObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShannonEndpointObservation) ProtoMessage() {}

func (x *ShannonEndpointObservation) ProtoReflect() protoreflect.Message {
	mi := &file_path_protocol_shannon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShannonEndpointObservation.ProtoReflect.Descriptor instead.
func (*ShannonEndpointObservation) Descriptor() ([]byte, []int) {
	return file_path_protocol_shannon_proto_rawDescGZIP(), []int{2}
}

func (x *ShannonEndpointObservation) GetSupplier() string {
	if x != nil {
		return x.Supplier
	}
	return ""
}

func (x *ShannonEndpointObservation) GetEndpointUrl() string {
	if x != nil {
		return x.EndpointUrl
	}
	return ""
}

func (x *ShannonEndpointObservation) GetEndpointAppAddress() string {
	if x != nil {
		return x.EndpointAppAddress
	}
	return ""
}

func (x *ShannonEndpointObservation) GetSessionServiceId() string {
	if x != nil {
		return x.SessionServiceId
	}
	return ""
}

func (x *ShannonEndpointObservation) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ShannonEndpointObservation) GetSessionStartHeight() int64 {
	if x != nil {
		return x.SessionStartHeight
	}
	return 0
}

func (x *ShannonEndpointObservation) GetSessionEndHeight() int64 {
	if x != nil {
		return x.SessionEndHeight
	}
	return 0
}

func (x *ShannonEndpointObservation) GetEndpointQueryTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndpointQueryTimestamp
	}
	return nil
}

func (x *ShannonEndpointObservation) GetEndpointResponseTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EndpointResponseTimestamp
	}
	return nil
}

func (x *ShannonEndpointObservation) GetErrorType() ShannonEndpointErrorType {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ShannonEndpointErrorType_SHANNON_ENDPOINT_ERROR_UNSPECIFIED
}

func (x *ShannonEndpointObservation) GetErrorDetails() string {
	if x != nil && x.ErrorDetails != nil {
		return *x.ErrorDetails
	}
	return ""
}

func (x *ShannonEndpointObservation) GetRecommendedSanction() ShannonSanctionType {
	if x != nil && x.RecommendedSanction != nil {
		return *x.RecommendedSanction
	}
	return ShannonSanctionType_SHANNON_SANCTION_UNSPECIFIED
}

// ShannonObservationsList provides a container for multiple ShannonRequestObservations,
// allowing them to be embedded in other protocol buffers.
type ShannonObservationsList struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Observations  []*ShannonRequestObservations `protobuf:"bytes,1,rep,name=observations,proto3" json:"observations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShannonObservationsList) Reset() {
	*x = ShannonObservationsList{}
	mi := &file_path_protocol_shannon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShannonObservationsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShannonObservationsList) ProtoMessage() {}

func (x *ShannonObservationsList) ProtoReflect() protoreflect.Message {
	mi := &file_path_protocol_shannon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShannonObservationsList.ProtoReflect.Descriptor instead.
func (*ShannonObservationsList) Descriptor() ([]byte, []int) {
	return file_path_protocol_shannon_proto_rawDescGZIP(), []int{3}
}

func (x *ShannonObservationsList) GetObservations() []*ShannonRequestObservations {
	if x != nil {
		return x.Observations
	}
	return nil
}

var File_path_protocol_shannon_proto protoreflect.FileDescriptor

var file_path_protocol_shannon_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x70, 0x61, 0x74, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x73, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70,
	0x61, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01,
	0x0a, 0x13, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x74, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0xfb, 0x01, 0x0a, 0x1a, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x4c, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a,
	0x15, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70,
	0x61, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x68, 0x61,
	0x6e, 0x6e, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x9e, 0x06, 0x0a, 0x1a, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a,
	0x14, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x54, 0x0a, 0x18,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x5f, 0x0a, 0x1b, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x19, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x01, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x14, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x61, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e,
	0x53, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x03, 0x52, 0x13,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x61, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x68, 0x0a, 0x17, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x64, 0x0a, 0x17, 0x53, 0x68,
	0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x48, 0x41, 0x4e, 0x4e, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e,
	0x53, 0x48, 0x41, 0x4e, 0x4e, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x01,
	0x2a, 0xd4, 0x01, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x6e, 0x6e, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x22, 0x53, 0x48, 0x41, 0x4e, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x48, 0x41, 0x4e, 0x4e, 0x4f, 0x4e,
	0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x48,
	0x41, 0x4e, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x02, 0x12, 0x22, 0x0a,
	0x1e, 0x53, 0x48, 0x41, 0x4e, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10,
	0x03, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x48, 0x41, 0x4e, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44,
	0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4d, 0x41, 0x58, 0x45,
	0x44, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x04, 0x2a, 0x75, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x6e, 0x6e,
	0x6f, 0x6e, 0x53, 0x61, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x1c, 0x53, 0x48, 0x41, 0x4e, 0x4e, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4e, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1c, 0x0a, 0x18, 0x53, 0x48, 0x41, 0x4e, 0x4e, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4e, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x53, 0x48, 0x41, 0x4e, 0x4e, 0x4f, 0x4e, 0x5f, 0x53, 0x41, 0x4e, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x42, 0x35,
	0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x77, 0x69, 0x74, 0x68, 0x67, 0x72, 0x6f, 0x76, 0x65, 0x2f, 0x70, 0x61, 0x74, 0x68,
	0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_path_protocol_shannon_proto_rawDescOnce sync.Once
	file_path_protocol_shannon_proto_rawDescData []byte
)

func file_path_protocol_shannon_proto_rawDescGZIP() []byte {
	file_path_protocol_shannon_proto_rawDescOnce.Do(func() {
		file_path_protocol_shannon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_path_protocol_shannon_proto_rawDesc), len(file_path_protocol_shannon_proto_rawDesc)))
	})
	return file_path_protocol_shannon_proto_rawDescData
}

var file_path_protocol_shannon_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_path_protocol_shannon_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_path_protocol_shannon_proto_goTypes = []any{
	(ShannonRequestErrorType)(0),       // 0: path.protocol.ShannonRequestErrorType
	(ShannonEndpointErrorType)(0),      // 1: path.protocol.ShannonEndpointErrorType
	(ShannonSanctionType)(0),           // 2: path.protocol.ShannonSanctionType
	(*ShannonRequestError)(nil),        // 3: path.protocol.ShannonRequestError
	(*ShannonRequestObservations)(nil), // 4: path.protocol.ShannonRequestObservations
	(*ShannonEndpointObservation)(nil), // 5: path.protocol.ShannonEndpointObservation
	(*ShannonObservationsList)(nil),    // 6: path.protocol.ShannonObservationsList
	(*timestamppb.Timestamp)(nil),      // 7: google.protobuf.Timestamp
}
var file_path_protocol_shannon_proto_depIdxs = []int32{
	0, // 0: path.protocol.ShannonRequestError.error_type:type_name -> path.protocol.ShannonRequestErrorType
	3, // 1: path.protocol.ShannonRequestObservations.request_error:type_name -> path.protocol.ShannonRequestError
	5, // 2: path.protocol.ShannonRequestObservations.endpoint_observations:type_name -> path.protocol.ShannonEndpointObservation
	7, // 3: path.protocol.ShannonEndpointObservation.endpoint_query_timestamp:type_name -> google.protobuf.Timestamp
	7, // 4: path.protocol.ShannonEndpointObservation.endpoint_response_timestamp:type_name -> google.protobuf.Timestamp
	1, // 5: path.protocol.ShannonEndpointObservation.error_type:type_name -> path.protocol.ShannonEndpointErrorType
	2, // 6: path.protocol.ShannonEndpointObservation.recommended_sanction:type_name -> path.protocol.ShannonSanctionType
	4, // 7: path.protocol.ShannonObservationsList.observations:type_name -> path.protocol.ShannonRequestObservations
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_path_protocol_shannon_proto_init() }
func file_path_protocol_shannon_proto_init() {
	if File_path_protocol_shannon_proto != nil {
		return
	}
	file_path_protocol_shannon_proto_msgTypes[1].OneofWrappers = []any{}
	file_path_protocol_shannon_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_path_protocol_shannon_proto_rawDesc), len(file_path_protocol_shannon_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_path_protocol_shannon_proto_goTypes,
		DependencyIndexes: file_path_protocol_shannon_proto_depIdxs,
		EnumInfos:         file_path_protocol_shannon_proto_enumTypes,
		MessageInfos:      file_path_protocol_shannon_proto_msgTypes,
	}.Build()
	File_path_protocol_shannon_proto = out.File
	file_path_protocol_shannon_proto_goTypes = nil
	file_path_protocol_shannon_proto_depIdxs = nil
}
