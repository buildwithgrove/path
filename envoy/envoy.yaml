static_resources:
  clusters:
    # The PATH Gateway service is the service that handles requests for the PATH API.
    - name: path_gateway_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: path_gateway_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: path_gateway
                      port_value: 3000
    # The Auth0 JWKS cluster is used to fetch the JWKS from Auth0.
    - name: auth0_jwks_cluster
      type: STRICT_DNS
      load_assignment:
        cluster_name: auth0_jwks_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: auth.grove.city
                      port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
    # The External Authorization cluster is used to handle external authorization checks.
    - name: ext-authz
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: ext-authz
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 10003
    # The Envoy Rate Limiting Service is used to rate limit service requests.
    - name: ratelimit
      type: STRICT_DNS
      connect_timeout: 1s
      lb_policy: ROUND_ROBIN
      protocol_selection: USE_CONFIGURED_PROTOCOL
      http2_protocol_options: {}
      load_assignment:
        cluster_name: ratelimit
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: ratelimit
                      port_value: 8081

  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 3001
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        auth0_provider:
                          issuer: https://auth.grove.city/
                          audiences:
                            - https://ui.backend.pokt.network/
                          remote_jwks:
                            http_uri:
                              uri: https://auth.grove.city/.well-known/jwks.json
                              cluster: auth0_jwks_cluster
                              timeout: 1s
                          forward: true
                          claim_to_headers:
                            - header_name: x-jwt-user-id
                              claim_name: sub
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      http_service:
                        server_uri:
                          uri: http://127.0.0.1:10003
                          cluster: ext-authz
                          timeout: 0.25s
                          failure_mode_allow: false
                        include_peer_certificate: true
                  - name: envoy.filters.http.ratelimit
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                      domain: rl
                      request_type: external
                      stage: 0
                      rate_limited_as_resource_exhausted: true
                      failure_mode_deny: false
                      enable_x_ratelimit_headers: DRAFT_VERSION_03
                      rate_limit_service:
                        grpc_service:
                          envoy_grpc:
                            cluster_name: ratelimit
                          transport_api_version: V3
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                # Configure the routing for the requests to the PATH service. These 
                # routes match the routes in the PATH service's `router.go` file.
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]  # Match all domains
                      routes:
                        # Route for /healthz
                        - match:
                            path: "/healthz"
                          route:
                            cluster: path_gateway_service
                            # Disable auth for `/healthz`
                            per_filter_config:
                              envoy.filters.http.jwt_authn:
                                disabled: true
                            envoy.filters.http.ext_authz:
                              disabled: true
                        # Route for /v1/{gateway_endpoint_id}
                        - match:
                            prefix: "/v1"
                          route:
                            cluster: path_gateway_service
                            # strip the endpoint ID from the path before forwarding to PATH for backwards compatibility
                            regex_rewrite:
                              pattern:
                                google_re2: {}
                                regex: "^/v1/(.*)"
                              substitution: "/v1"
                            # Configure descriptors for rate limiting here
                            rate_limits:
                              - actions:
                                  # Only send descriptors to the ratelimit service if the `x-rl-*` headers are set
                                  - request_headers:
                                      header_name: "x-rl-endpoint-id"
                                      descriptor_key: "x-rl-endpoint-id"
                                  - request_headers:
                                      header_name: "x-rl-plan"
                                      descriptor_key: "x-rl-plan"
