syntax = "proto3";
package path.qos;

option go_package = "github.com/buildwithgrove/path/observation/qos";

// JsonRpcRequest contains all the fields of a JSONRPC request that are captured as an observation.
// https://www.jsonrpc.org/specification#request_object
message JsonRpcRequest {
  // id is the ID of the JSONRPC request.
  // An identifier established by the Client  MUST contain a String, Number, or NULL value if included.
  string id = 1;

   // method is the method specified by the JSON-RPC request.
   // E.g. eth_chainId in the context of EVM based chains
  string method = 2;

  // DEV_NOTE: This structure is NOT intended to capture the full JSONRPC spec.
  // Add new fields on a at-needed basis here.
}

// JsonRpcResponse contains the fields of a JSONRPC response that need to be captured as an observation:
// https://www.jsonrpc.org/specification#response_object
//
// JsonRpcResponse is NOT intended to capture the full JSONRPC spec.
message JsonRpcResponse {
  // id is the ID field of the JSONRPC response.
  string id = 1;
  // result stores the `result` field of tje JSONRPC response.
  string result = 2;
  // err stores the JSONRPC response's error field, if set.
  optional JsonRpcResponseError err=3;
}

// JsonRpcResponseError contains the fields of a JSONRPC response error object:
// https://www.jsonrpc.org/specification#error_object
//
// JsonRpcResponseError is NOT intended to capture the full JSONRPC spec:
// it only maintains the data that is required for QoS observations.
message JsonRpcResponseError {
  // code stores the `code` field of a JSONRPC response's error object.
  int64 code = 1;
  // message stores the `message` field of a JSONRPC response's error object.
  string message = 2;
}
