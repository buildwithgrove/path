syntax = "proto3";
package path.qos;

option go_package = "github.com/buildwithgrove/path/observation/qos";

import "path/qos/jsonrpc.proto";

// SolanaRequestObservations captures QoS data for a single Solana blockchain service request,
// including all observations made during potential retries.
message SolanaRequestObservations {
  // JSON-RPC request to the Solana blockchain service
  // TODO_TECHDEBT: This assumes all SolanaVM blockchains only (and always) support JSON-RPC.
  // May need expansion/refactoring for future blockchain support.
  JsonRpcRequest jsonrpc_request = 1;

  // Multiple observations possible if:
  // - Original endpoint returns invalid response
  // - Retry mechanism activates
  repeated SolanaEndpointObservation endpoint_observations = 2;
}

// SolanaEndpointObservation captures a single endpoint's response to a request
message SolanaEndpointObservation {
  // Address of the endpoint handling the request
  string endpoint_addr = 1;

  oneof response_observation {
    // Response from getEpochInfo
    // Docs: https://solana.com/docs/rpc/http/getepochinfo
    SolanaGetEpochInfoResponse get_epoch_info_response = 2;

    // Response from getHealth
    // Docs: https://solana.com/docs/rpc/http/gethealth
    SolanaGetHealthResponse get_health_response = 3;

    // Responses not used in endpoint validation (e.g., getAccountInfo)
    SolanaUnrecognizedResponse unrecognized_response = 4;
  }
}

// SolanaEpochInfoResponse stores getEpochInfo response data
// Docs: https://solana.com/docs/rpc/http/getepochinfo
message SolanaGetEpochInfoResponse {
  // Stored as uint64 for cross-instance validation
  uint64 block_height = 1;
  uint64 epoch = 2;
}

// SolanaGetHealthResponse stores getHealth response data
// Docs: https://solana.com/docs/rpc/http/gethealth
message SolanaGetHealthResponse {
  string result = 1;
}

// SolanaUnrecognizedResponse stores responses from methods not used in validation
// Examples: getTokenSupply, getTransaction
message SolanaUnrecognizedResponse {
  JsonRpcResponse jsonrpc_response = 1;
}