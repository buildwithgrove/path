# This schema file may be used to validate the services config files using the `yaml-language-server` VSCode extension.
# See: https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml

$schema: "http://json-schema.org/draft-07/schema#"
title: "PATH Services Configuration Schema"
description: "PATH Services Configuration YAML: this file is used to configure services for end-to-end tests for PATH gateways"
type: object
additionalProperties: false

properties:
  services:
    description: "Array of services to run the tests against"
    type: array
    items:
      oneOf:
        - $ref: "#/definitions/evm_service"
        - $ref: "#/definitions/solana_service"
        - $ref: "#/definitions/cometbft_service"
        - $ref: "#/definitions/anvil_service"

definitions:
  evm_service:
    description: "EVM service definition"
    type: object
    additionalProperties: false
    required:
      - name
      - service_id
      - service_type
      - service_params
    properties:
      name:
        description: "Name of the service"
        type: string
        examples: ["Shannon - eth (Ethereum) Test"]
      service_id:
        description: "Service ID to test - identifies the specific blockchain service"
        type: string
        examples: ["xrplevm", "eth", "arb-one"]
      service_type:
        description: "Type of service to test"
        type: string
        enum: ["evm"]
        examples: ["evm"]
      alias:
        description: "(Optional) Alias for the service, used for subdomain routing or test aliasing. Only present if different from shannonServiceId."
        type: string
        examples: ["arbitrum-one", "eth-mainnet"]
      archival:
        description: "Whether this is an archival test (historical data access)"
        type: boolean
      service_params:
        $ref: "#/definitions/evm_service_params"
  evm_service_params:
    description: "Service parameters for EVM test requests"
    type: object
    additionalProperties: false
    required:
      [
        "contract_address",
        "contract_start_block",
        "transaction_hash",
        "call_data",
      ]
    properties:
      contract_address:
        description: "Contract/account address for blockchain calls (supports EVM and Harmony formats)"
        type: string
        pattern: "^(0x[a-fA-F0-9]{40}|one[a-z0-9]{39})$"
        examples:
          [
            "0x28C6c06298d514Db089934071355E5743bf21d60",
            "one19senwle0ezp3he6ed9xkc7zeg5rs94r0ecpp0a",
          ]
      call_data:
        description: "Call data for eth_call"
        type: string
        pattern: "^0x[a-fA-F0-9]*$"
        examples: ["0x18160ddd"]
      contract_start_block:
        description: "Minimum block number for archival tests - ensures contract address has balance or transactions"
        type: integer
        minimum: 0
      transaction_hash:
        description: "Transaction hash for receipt/transaction queries"
        type: string
        pattern: "^0x[a-fA-F0-9]{64}$"
        examples:
          ["0xfeccd627b5b391d04fe45055873de3b2c0b4302d52e96bd41d5f0019a704165f"]

  solana_service:
    description: "Solana service definition"
    type: object
    additionalProperties: false
    required:
      - name
      - service_id
      - service_type
      - service_params
    properties:
      name:
        description: "Name of the service"
        type: string
        examples: ["Shannon - solana (Solana) Test"]
      service_id:
        description: "Service ID to test - identifies the specific blockchain service"
        type: string
        examples: ["solana"]
      service_type:
        description: "Type of service to test"
        type: string
        enum: ["solana"]
        examples: ["solana"]
      alias:
        description: "(Optional) Alias for the service, used for subdomain routing or test aliasing. Only present if different from shannonServiceId."
        type: string
        examples: ["solana-mainnet"]
      service_params:
        $ref: "#/definitions/solana_service_params"
  solana_service_params:
    description: "Service parameters for Solana test requests"
    type: object
    additionalProperties: false
    required: ["contract_address", "transaction_hash"]
    properties:
      contract_address:
        description: "Account address for Solana calls"
        type: string
        pattern: "^[1-9A-HJ-NP-Za-km-z]{32,44}$"
        examples: ["FxteHmLwG9nk1eL4pjNve3Eub2goGkkz6g6TbvdmW46a"]
      transaction_hash:
        description: "Transaction signature for transaction queries"
        type: string
        pattern: "^[1-9A-HJ-NP-Za-km-z]{88}$"
        examples:
          [
            "4XqrV7zHtv8mHZqsPxueeYc1NodL9nxkdeZJYPtAuw67LszjdYxVgHwUJgBVubuE63ZCToBawe22c8DAAuRdipKs",
          ]

  cometbft_service:
    description: "CometBFT service definition"
    type: object
    additionalProperties: false
    required:
      - name
      - service_id
      - service_type
    properties:
      name:
        description: "Name of the service"
        type: string
      service_id:
        description: "Service ID to test - identifies the specific blockchain service"
        type: string
      service_type:
        description: "Type of service to test"
        type: string
        enum: ["cometbft"]
        examples: ["cometbft"]
      alias:
        description: "(Optional) Alias for the service, used for subdomain routing or test aliasing. Only present if different from shannonServiceId."
        type: string

  anvil_service:
    description: "Anvil service definition"
    type: object
    additionalProperties: false
    required:
      - name
      - service_id
      - service_type
    properties:
      name:
        description: "Name of the service"
        type: string
      service_id:
        description: "Service ID to test - identifies the specific blockchain service"
        type: string
      service_type:
        description: "Type of service to test"
        type: string
        enum: ["anvil"]
        examples: ["anvil"]
      alias:
        description: "(Optional) Alias for the service, used for subdomain routing or test aliasing. Only present if different from shannonServiceId."
        type: string
