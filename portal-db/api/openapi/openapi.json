{
    "openapi": "3.0.0",
    "info": {
        "description": "",
        "title": "standard public schema",
        "version": "12.0.2 (a4e00ff)"
    },
    "paths": {
        "/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "summary": "OpenAPI description (this document)",
                "tags": [
                    "Introspection"
                ]
            }
        },
        "/rpc/gen_salt": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "text"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) gen_salt"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Args2"
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) gen_salt"
                ]
            }
        },
        "/rpc/pgp_armor_headers": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "text"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) pgp_armor_headers"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Args2"
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) pgp_armor_headers"
                ]
            }
        },
        "/rpc/armor": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "bytea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) armor"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Args"
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) armor"
                ]
            }
        },
        "/rpc/pgp_key_id": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "bytea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) pgp_key_id"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Args"
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) pgp_key_id"
                ]
            }
        },
        "/rpc/dearmor": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "text"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) dearmor"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Args2"
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) dearmor"
                ]
            }
        },
        "/rpc/gen_random_uuid": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) gen_random_uuid"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/components/parameters/preferParams"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json;nulls=stripped": {
                            "schema": {
                                "type": "object"
                            }
                        },
                        "application/vnd.pgrst.object+json": {
                            "schema": {
                                "type": "object"
                            }
                        },
                        "text/csv": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "(rpc) gen_random_uuid"
                ]
            }
        }
    },
    "externalDocs": {
        "description": "PostgREST Documentation",
        "url": "https://postgrest.org/en/v12.0/api.html"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        }
    ],
    "components": {
        "parameters": {
            "preferParams": {
                "name": "Prefer",
                "description": "Preference",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "enum": [
                        "params=single-object"
                    ]
                }
            },
            "preferReturn": {
                "name": "Prefer",
                "description": "Preference",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "enum": [
                        "return=representation",
                        "return=minimal",
                        "return=none"
                    ]
                }
            },
            "preferCount": {
                "name": "Prefer",
                "description": "Preference",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "enum": [
                        "count=none"
                    ]
                }
            },
            "preferPost": {
                "name": "Prefer",
                "description": "Preference",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "enum": [
                        "return=representation",
                        "return=minimal",
                        "return=none",
                        "resolution=ignore-duplicates",
                        "resolution=merge-duplicates"
                    ]
                }
            },
            "select": {
                "name": "select",
                "description": "Filtering Columns",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "on_conflict": {
                "name": "on_conflict",
                "description": "On Conflict",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "order": {
                "name": "order",
                "description": "Ordering",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "range": {
                "name": "Range",
                "description": "Limiting and Pagination",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string"
                }
            },
            "rangeUnit": {
                "name": "Range-Unit",
                "description": "Limiting and Pagination",
                "required": false,
                "in": "header",
                "schema": {
                    "type": "string",
                    "default": "items"
                }
            },
            "offset": {
                "name": "offset",
                "description": "Limiting and Pagination",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "limit": {
                "name": "limit",
                "description": "Limiting and Pagination",
                "required": false,
                "in": "query",
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "Args": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "": {
                                    "format": "bytea",
                                    "type": "string"
                                }
                            },
                            "required": [
                                ""
                            ],
                            "type": "object"
                        }
                    },
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        "schema": {
                            "properties": {
                                "": {
                                    "format": "bytea",
                                    "type": "string"
                                }
                            },
                            "required": [
                                ""
                            ],
                            "type": "object"
                        }
                    },
                    "application/vnd.pgrst.object+json": {
                        "schema": {
                            "properties": {
                                "": {
                                    "format": "bytea",
                                    "type": "string"
                                }
                            },
                            "required": [
                                ""
                            ],
                            "type": "object"
                        }
                    },
                    "text/csv": {
                        "schema": {
                            "properties": {
                                "": {
                                    "format": "bytea",
                                    "type": "string"
                                }
                            },
                            "required": [
                                ""
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": true
            },
            "Args2": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                ""
                            ],
                            "type": "object"
                        }
                    },
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        "schema": {
                            "properties": {
                                "": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                ""
                            ],
                            "type": "object"
                        }
                    },
                    "application/vnd.pgrst.object+json": {
                        "schema": {
                            "properties": {
                                "": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                ""
                            ],
                            "type": "object"
                        }
                    },
                    "text/csv": {
                        "schema": {
                            "properties": {
                                "": {
                                    "format": "text",
                                    "type": "string"
                                }
                            },
                            "required": [
                                ""
                            ],
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        }
    }
}