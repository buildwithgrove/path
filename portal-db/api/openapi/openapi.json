{
  "swagger": "2.0",
  "info": {
    "description": "",
    "title": "standard public schema",
    "version": "12.0.2 (a4e00ff)"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "produces": [
    "application/json",
    "application/vnd.pgrst.object+json;nulls=stripped",
    "application/vnd.pgrst.object+json",
    "text/csv"
  ],
  "paths": {
    "/": {
      "get": {
        "produces": [
          "application/openapi+json",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "OpenAPI description (this document)",
        "tags": [
          "Introspection"
        ]
      }
    },
    "/service_fallbacks": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.service_fallback_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.service_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.fallback_url"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/service_fallbacks"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Fallback URLs for services when primary endpoints fail",
        "tags": [
          "service_fallbacks"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.service_fallbacks"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Fallback URLs for services when primary endpoints fail",
        "tags": [
          "service_fallbacks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.service_fallback_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.service_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.fallback_url"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Fallback URLs for services when primary endpoints fail",
        "tags": [
          "service_fallbacks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.service_fallback_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.service_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.fallback_url"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.service_fallbacks.updated_at"
          },
          {
            "$ref": "#/parameters/body.service_fallbacks"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Fallback URLs for services when primary endpoints fail",
        "tags": [
          "service_fallbacks"
        ]
      }
    },
    "/portal_plans": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.portal_plans.portal_plan_type"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.portal_plan_type_description"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_usage_limit"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_usage_limit_interval"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_rate_limit_rps"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_application_limit"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/portal_plans"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Available subscription plans for Portal Accounts",
        "tags": [
          "portal_plans"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.portal_plans"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Available subscription plans for Portal Accounts",
        "tags": [
          "portal_plans"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.portal_plans.portal_plan_type"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.portal_plan_type_description"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_usage_limit"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_usage_limit_interval"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_rate_limit_rps"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_application_limit"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Available subscription plans for Portal Accounts",
        "tags": [
          "portal_plans"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.portal_plans.portal_plan_type"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.portal_plan_type_description"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_usage_limit"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_usage_limit_interval"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_rate_limit_rps"
          },
          {
            "$ref": "#/parameters/rowFilter.portal_plans.plan_application_limit"
          },
          {
            "$ref": "#/parameters/body.portal_plans"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Available subscription plans for Portal Accounts",
        "tags": [
          "portal_plans"
        ]
      }
    },
    "/services": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.services.service_id"
          },
          {
            "$ref": "#/parameters/rowFilter.services.service_name"
          },
          {
            "$ref": "#/parameters/rowFilter.services.compute_units_per_relay"
          },
          {
            "$ref": "#/parameters/rowFilter.services.service_domains"
          },
          {
            "$ref": "#/parameters/rowFilter.services.service_owner_address"
          },
          {
            "$ref": "#/parameters/rowFilter.services.network_id"
          },
          {
            "$ref": "#/parameters/rowFilter.services.active"
          },
          {
            "$ref": "#/parameters/rowFilter.services.quality_fallback_enabled"
          },
          {
            "$ref": "#/parameters/rowFilter.services.hard_fallback_enabled"
          },
          {
            "$ref": "#/parameters/rowFilter.services.svg_icon"
          },
          {
            "$ref": "#/parameters/rowFilter.services.deleted_at"
          },
          {
            "$ref": "#/parameters/rowFilter.services.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.services.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/services"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Supported blockchain services from the Pocket Network",
        "tags": [
          "services"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.services"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Supported blockchain services from the Pocket Network",
        "tags": [
          "services"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.services.service_id"
          },
          {
            "$ref": "#/parameters/rowFilter.services.service_name"
          },
          {
            "$ref": "#/parameters/rowFilter.services.compute_units_per_relay"
          },
          {
            "$ref": "#/parameters/rowFilter.services.service_domains"
          },
          {
            "$ref": "#/parameters/rowFilter.services.service_owner_address"
          },
          {
            "$ref": "#/parameters/rowFilter.services.network_id"
          },
          {
            "$ref": "#/parameters/rowFilter.services.active"
          },
          {
            "$ref": "#/parameters/rowFilter.services.quality_fallback_enabled"
          },
          {
            "$ref": "#/parameters/rowFilter.services.hard_fallback_enabled"
          },
          {
            "$ref": "#/parameters/rowFilter.services.svg_icon"
          },
          {
            "$ref": "#/parameters/rowFilter.services.deleted_at"
          },
          {
            "$ref": "#/parameters/rowFilter.services.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.services.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Supported blockchain services from the Pocket Network",
        "tags": [
          "services"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.services.service_id"
          },
          {
            "$ref": "#/parameters/rowFilter.services.service_name"
          },
          {
            "$ref": "#/parameters/rowFilter.services.compute_units_per_relay"
          },
          {
            "$ref": "#/parameters/rowFilter.services.service_domains"
          },
          {
            "$ref": "#/parameters/rowFilter.services.service_owner_address"
          },
          {
            "$ref": "#/parameters/rowFilter.services.network_id"
          },
          {
            "$ref": "#/parameters/rowFilter.services.active"
          },
          {
            "$ref": "#/parameters/rowFilter.services.quality_fallback_enabled"
          },
          {
            "$ref": "#/parameters/rowFilter.services.hard_fallback_enabled"
          },
          {
            "$ref": "#/parameters/rowFilter.services.svg_icon"
          },
          {
            "$ref": "#/parameters/rowFilter.services.deleted_at"
          },
          {
            "$ref": "#/parameters/rowFilter.services.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.services.updated_at"
          },
          {
            "$ref": "#/parameters/body.services"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Supported blockchain services from the Pocket Network",
        "tags": [
          "services"
        ]
      }
    },
    "/networks": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.networks.network_id"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/networks"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Supported blockchain networks (Pocket mainnet, testnet, etc.)",
        "tags": [
          "networks"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.networks"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Supported blockchain networks (Pocket mainnet, testnet, etc.)",
        "tags": [
          "networks"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.networks.network_id"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Supported blockchain networks (Pocket mainnet, testnet, etc.)",
        "tags": [
          "networks"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.networks.network_id"
          },
          {
            "$ref": "#/parameters/body.networks"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Supported blockchain networks (Pocket mainnet, testnet, etc.)",
        "tags": [
          "networks"
        ]
      }
    },
    "/service_endpoints": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.endpoint_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.service_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.endpoint_type"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.updated_at"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/order"
          },
          {
            "$ref": "#/parameters/range"
          },
          {
            "$ref": "#/parameters/rangeUnit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/service_endpoints"
              },
              "type": "array"
            }
          },
          "206": {
            "description": "Partial Content"
          }
        },
        "summary": "Available endpoint types for each service",
        "tags": [
          "service_endpoints"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/parameters/body.service_endpoints"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/preferPost"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Available endpoint types for each service",
        "tags": [
          "service_endpoints"
        ]
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.endpoint_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.service_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.endpoint_type"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.updated_at"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Available endpoint types for each service",
        "tags": [
          "service_endpoints"
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.endpoint_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.service_id"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.endpoint_type"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.created_at"
          },
          {
            "$ref": "#/parameters/rowFilter.service_endpoints.updated_at"
          },
          {
            "$ref": "#/parameters/body.service_endpoints"
          },
          {
            "$ref": "#/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Available endpoint types for each service",
        "tags": [
          "service_endpoints"
        ]
      }
    },
    "/rpc/me": {
      "get": {
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) me"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) me"
        ]
      }
    },
    "/rpc/create_portal_application": {
      "get": {
        "parameters": [
          {
            "format": "uuid",
            "in": "query",
            "name": "p_portal_account_id",
            "required": true,
            "type": "string"
          },
          {
            "format": "integer",
            "in": "query",
            "name": "p_portal_user_id",
            "required": true,
            "type": "integer"
          },
          {
            "format": "character varying",
            "in": "query",
            "name": "p_portal_application_name",
            "required": false,
            "type": "string"
          },
          {
            "format": "character varying",
            "in": "query",
            "name": "p_emoji",
            "required": false,
            "type": "string"
          },
          {
            "format": "integer",
            "in": "query",
            "name": "p_portal_application_user_limit",
            "required": false,
            "type": "integer"
          },
          {
            "format": "plan_interval",
            "in": "query",
            "name": "p_portal_application_user_limit_interval",
            "required": false,
            "type": "string"
          },
          {
            "format": "integer",
            "in": "query",
            "name": "p_portal_application_user_limit_rps",
            "required": false,
            "type": "integer"
          },
          {
            "format": "character varying",
            "in": "query",
            "name": "p_portal_application_description",
            "required": false,
            "type": "string"
          },
          {
            "format": "character varying[]",
            "in": "query",
            "name": "p_favorite_service_ids",
            "required": false,
            "type": "string"
          },
          {
            "format": "text",
            "in": "query",
            "name": "p_secret_key_required",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) create_portal_application"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "args",
            "required": true,
            "schema": {
              "properties": {
                "p_emoji": {
                  "format": "character varying",
                  "type": "string"
                },
                "p_favorite_service_ids": {
                  "format": "character varying[]",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "p_portal_account_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "p_portal_application_description": {
                  "format": "character varying",
                  "type": "string"
                },
                "p_portal_application_name": {
                  "format": "character varying",
                  "type": "string"
                },
                "p_portal_application_user_limit": {
                  "format": "integer",
                  "type": "integer"
                },
                "p_portal_application_user_limit_interval": {
                  "format": "plan_interval",
                  "type": "string"
                },
                "p_portal_application_user_limit_rps": {
                  "format": "integer",
                  "type": "integer"
                },
                "p_portal_user_id": {
                  "format": "integer",
                  "type": "integer"
                },
                "p_secret_key_required": {
                  "format": "text",
                  "type": "string"
                }
              },
              "required": [
                "p_portal_account_id",
                "p_portal_user_id"
              ],
              "type": "object"
            }
          },
          {
            "$ref": "#/parameters/preferParams"
          }
        ],
        "produces": [
          "application/json",
          "application/vnd.pgrst.object+json;nulls=stripped",
          "application/vnd.pgrst.object+json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "(rpc) create_portal_application"
        ]
      }
    }
  },
  "definitions": {
    "service_fallbacks": {
      "description": "Fallback URLs for services when primary endpoints fail",
      "required": [
        "service_fallback_id",
        "service_id",
        "fallback_url"
      ],
      "properties": {
        "service_fallback_id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "integer",
          "type": "integer"
        },
        "service_id": {
          "description": "Note:\nThis is a Foreign Key to `services.service_id`.<fk table='services' column='service_id'/>",
          "format": "character varying",
          "maxLength": 42,
          "type": "string"
        },
        "fallback_url": {
          "format": "character varying",
          "maxLength": 255,
          "type": "string"
        },
        "created_at": {
          "default": "CURRENT_TIMESTAMP",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "CURRENT_TIMESTAMP",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "portal_plans": {
      "description": "Available subscription plans for Portal Accounts",
      "required": [
        "portal_plan_type"
      ],
      "properties": {
        "portal_plan_type": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "character varying",
          "maxLength": 42,
          "type": "string"
        },
        "portal_plan_type_description": {
          "format": "character varying",
          "maxLength": 420,
          "type": "string"
        },
        "plan_usage_limit": {
          "description": "Maximum usage allowed within the interval",
          "format": "integer",
          "type": "integer"
        },
        "plan_usage_limit_interval": {
          "enum": [
            "day",
            "month",
            "year"
          ],
          "format": "public.plan_interval",
          "type": "string"
        },
        "plan_rate_limit_rps": {
          "description": "Rate limit in requests per second",
          "format": "integer",
          "type": "integer"
        },
        "plan_application_limit": {
          "format": "integer",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "services": {
      "description": "Supported blockchain services from the Pocket Network",
      "required": [
        "service_id",
        "service_name",
        "service_domains"
      ],
      "properties": {
        "service_id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "character varying",
          "maxLength": 42,
          "type": "string"
        },
        "service_name": {
          "format": "character varying",
          "maxLength": 169,
          "type": "string"
        },
        "compute_units_per_relay": {
          "description": "Cost in compute units for each relay",
          "format": "integer",
          "type": "integer"
        },
        "service_domains": {
          "description": "Valid domains for this service",
          "format": "character varying[]",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "service_owner_address": {
          "description": "Note:\nThis is a Foreign Key to `gateways.gateway_address`.<fk table='gateways' column='gateway_address'/>",
          "format": "character varying",
          "maxLength": 50,
          "type": "string"
        },
        "network_id": {
          "description": "Note:\nThis is a Foreign Key to `networks.network_id`.<fk table='networks' column='network_id'/>",
          "format": "character varying",
          "maxLength": 42,
          "type": "string"
        },
        "active": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "quality_fallback_enabled": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "hard_fallback_enabled": {
          "default": false,
          "format": "boolean",
          "type": "boolean"
        },
        "svg_icon": {
          "format": "text",
          "type": "string"
        },
        "deleted_at": {
          "format": "timestamp with time zone",
          "type": "string"
        },
        "created_at": {
          "default": "CURRENT_TIMESTAMP",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "CURRENT_TIMESTAMP",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    },
    "networks": {
      "description": "Supported blockchain networks (Pocket mainnet, testnet, etc.)",
      "required": [
        "network_id"
      ],
      "properties": {
        "network_id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "character varying",
          "maxLength": 42,
          "type": "string"
        }
      },
      "type": "object"
    },
    "service_endpoints": {
      "description": "Available endpoint types for each service",
      "required": [
        "endpoint_id",
        "service_id"
      ],
      "properties": {
        "endpoint_id": {
          "description": "Note:\nThis is a Primary Key.<pk/>",
          "format": "integer",
          "type": "integer"
        },
        "service_id": {
          "description": "Note:\nThis is a Foreign Key to `services.service_id`.<fk table='services' column='service_id'/>",
          "format": "character varying",
          "maxLength": 42,
          "type": "string"
        },
        "endpoint_type": {
          "enum": [
            "cometBFT",
            "cosmos",
            "REST",
            "JSON-RPC",
            "WSS",
            "gRPC"
          ],
          "format": "public.endpoint_type",
          "type": "string"
        },
        "created_at": {
          "default": "CURRENT_TIMESTAMP",
          "format": "timestamp with time zone",
          "type": "string"
        },
        "updated_at": {
          "default": "CURRENT_TIMESTAMP",
          "format": "timestamp with time zone",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "preferParams": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "params=single-object"
      ],
      "in": "header",
      "type": "string"
    },
    "preferReturn": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferCount": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "count=none"
      ],
      "in": "header",
      "type": "string"
    },
    "preferPost": {
      "name": "Prefer",
      "description": "Preference",
      "required": false,
      "enum": [
        "return=representation",
        "return=minimal",
        "return=none",
        "resolution=ignore-duplicates",
        "resolution=merge-duplicates"
      ],
      "in": "header",
      "type": "string"
    },
    "select": {
      "name": "select",
      "description": "Filtering Columns",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "on_conflict": {
      "name": "on_conflict",
      "description": "On Conflict",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "order": {
      "name": "order",
      "description": "Ordering",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "range": {
      "name": "Range",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "header",
      "type": "string"
    },
    "rangeUnit": {
      "name": "Range-Unit",
      "description": "Limiting and Pagination",
      "required": false,
      "default": "items",
      "in": "header",
      "type": "string"
    },
    "offset": {
      "name": "offset",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "limit": {
      "name": "limit",
      "description": "Limiting and Pagination",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "body.service_fallbacks": {
      "name": "service_fallbacks",
      "description": "service_fallbacks",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/service_fallbacks"
      }
    },
    "rowFilter.service_fallbacks.service_fallback_id": {
      "name": "service_fallback_id",
      "required": false,
      "format": "integer",
      "in": "query",
      "type": "string"
    },
    "rowFilter.service_fallbacks.service_id": {
      "name": "service_id",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.service_fallbacks.fallback_url": {
      "name": "fallback_url",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.service_fallbacks.created_at": {
      "name": "created_at",
      "required": false,
      "format": "timestamp with time zone",
      "in": "query",
      "type": "string"
    },
    "rowFilter.service_fallbacks.updated_at": {
      "name": "updated_at",
      "required": false,
      "format": "timestamp with time zone",
      "in": "query",
      "type": "string"
    },
    "body.portal_plans": {
      "name": "portal_plans",
      "description": "portal_plans",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/portal_plans"
      }
    },
    "rowFilter.portal_plans.portal_plan_type": {
      "name": "portal_plan_type",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.portal_plans.portal_plan_type_description": {
      "name": "portal_plan_type_description",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.portal_plans.plan_usage_limit": {
      "name": "plan_usage_limit",
      "description": "Maximum usage allowed within the interval",
      "required": false,
      "format": "integer",
      "in": "query",
      "type": "string"
    },
    "rowFilter.portal_plans.plan_usage_limit_interval": {
      "name": "plan_usage_limit_interval",
      "required": false,
      "format": "public.plan_interval",
      "in": "query",
      "type": "string"
    },
    "rowFilter.portal_plans.plan_rate_limit_rps": {
      "name": "plan_rate_limit_rps",
      "description": "Rate limit in requests per second",
      "required": false,
      "format": "integer",
      "in": "query",
      "type": "string"
    },
    "rowFilter.portal_plans.plan_application_limit": {
      "name": "plan_application_limit",
      "required": false,
      "format": "integer",
      "in": "query",
      "type": "string"
    },
    "body.services": {
      "name": "services",
      "description": "services",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/services"
      }
    },
    "rowFilter.services.service_id": {
      "name": "service_id",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.service_name": {
      "name": "service_name",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.compute_units_per_relay": {
      "name": "compute_units_per_relay",
      "description": "Cost in compute units for each relay",
      "required": false,
      "format": "integer",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.service_domains": {
      "name": "service_domains",
      "description": "Valid domains for this service",
      "required": false,
      "format": "character varying[]",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.service_owner_address": {
      "name": "service_owner_address",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.network_id": {
      "name": "network_id",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.active": {
      "name": "active",
      "required": false,
      "format": "boolean",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.quality_fallback_enabled": {
      "name": "quality_fallback_enabled",
      "required": false,
      "format": "boolean",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.hard_fallback_enabled": {
      "name": "hard_fallback_enabled",
      "required": false,
      "format": "boolean",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.svg_icon": {
      "name": "svg_icon",
      "required": false,
      "format": "text",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.deleted_at": {
      "name": "deleted_at",
      "required": false,
      "format": "timestamp with time zone",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.created_at": {
      "name": "created_at",
      "required": false,
      "format": "timestamp with time zone",
      "in": "query",
      "type": "string"
    },
    "rowFilter.services.updated_at": {
      "name": "updated_at",
      "required": false,
      "format": "timestamp with time zone",
      "in": "query",
      "type": "string"
    },
    "body.networks": {
      "name": "networks",
      "description": "networks",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/networks"
      }
    },
    "rowFilter.networks.network_id": {
      "name": "network_id",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "body.service_endpoints": {
      "name": "service_endpoints",
      "description": "service_endpoints",
      "required": false,
      "in": "body",
      "schema": {
        "$ref": "#/definitions/service_endpoints"
      }
    },
    "rowFilter.service_endpoints.endpoint_id": {
      "name": "endpoint_id",
      "required": false,
      "format": "integer",
      "in": "query",
      "type": "string"
    },
    "rowFilter.service_endpoints.service_id": {
      "name": "service_id",
      "required": false,
      "format": "character varying",
      "in": "query",
      "type": "string"
    },
    "rowFilter.service_endpoints.endpoint_type": {
      "name": "endpoint_type",
      "required": false,
      "format": "public.endpoint_type",
      "in": "query",
      "type": "string"
    },
    "rowFilter.service_endpoints.created_at": {
      "name": "created_at",
      "required": false,
      "format": "timestamp with time zone",
      "in": "query",
      "type": "string"
    },
    "rowFilter.service_endpoints.updated_at": {
      "name": "updated_at",
      "required": false,
      "format": "timestamp with time zone",
      "in": "query",
      "type": "string"
    }
  },
  "externalDocs": {
    "description": "PostgREST Documentation",
    "url": "https://postgrest.org/en/v12.0/api.html"
  }
}
