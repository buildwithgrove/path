services:
  postgres:
    image: postgres:17
    container_name: path-portal-db
    environment:
      POSTGRES_DB: portal_db
      POSTGRES_USER: portal_user
      POSTGRES_PASSWORD: portal_password
    ports:
      - "5435:5432"
    volumes:
      - ./tmp/portal_db_data:/var/lib/postgresql/data
      - ./schema:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "portal_user", "-d", "portal_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgREST API Server
  postgrest:
    image: postgrest/postgrest:v12.0.2
    container_name: portal-db-api
    ports:
      - "3000:3000"
    environment:
      # PostgREST will read the config file
      PGRST_DB_URI: postgresql://portal_user:portal_password@postgres:5432/portal_db
      PGRST_DB_SCHEMAS: public,api
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_DB_POOL: 10
      PGRST_SERVER_HOST: 0.0.0.0
      PGRST_SERVER_PORT: 3000
      PGRST_OPENAPI_MODE: follow-privileges
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3000
      PGRST_SERVER_CORS_ALLOWED_ORIGINS: "*"
      PGRST_SERVER_CORS_ALLOWED_HEADERS: "accept, authorization, content-type, x-requested-with, range"
      PGRST_SERVER_CORS_EXPOSED_HEADERS: "content-range, content-profile"
      PGRST_LOG_LEVEL: info
    volumes:
      - ./api/postgrest/postgrest.conf:/etc/postgrest/postgrest.conf:ro
    depends_on:
      postgres:
        condition: service_healthy
    command: ["postgrest", "/etc/postgrest/postgrest.conf"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
