/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Companies or customer groups that can be attached to Portal Accounts
 * @export
 * @interface Organizations
 */
export interface Organizations {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {number}
     * @memberof Organizations
     */
    organizationId: number;
    /**
     * Name of the organization
     * @type {string}
     * @memberof Organizations
     */
    organizationName: string;
    /**
     * Soft delete timestamp
     * @type {string}
     * @memberof Organizations
     */
    deletedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Organizations
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Organizations
     */
    updatedAt?: string;
}

/**
 * Check if a given object implements the Organizations interface.
 */
export function instanceOfOrganizations(value: object): value is Organizations {
    if (!('organizationId' in value) || value['organizationId'] === undefined) return false;
    if (!('organizationName' in value) || value['organizationName'] === undefined) return false;
    return true;
}

export function OrganizationsFromJSON(json: any): Organizations {
    return OrganizationsFromJSONTyped(json, false);
}

export function OrganizationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Organizations {
    if (json == null) {
        return json;
    }
    return {
        
        'organizationId': json['organization_id'],
        'organizationName': json['organization_name'],
        'deletedAt': json['deleted_at'] == null ? undefined : json['deleted_at'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function OrganizationsToJSON(json: any): Organizations {
    return OrganizationsToJSONTyped(json, false);
}

export function OrganizationsToJSONTyped(value?: Organizations | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'organization_id': value['organizationId'],
        'organization_name': value['organizationName'],
        'deleted_at': value['deletedAt'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
    };
}

