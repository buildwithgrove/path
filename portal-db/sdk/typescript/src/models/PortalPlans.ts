/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Available subscription plans for Portal Accounts
 * @export
 * @interface PortalPlans
 */
export interface PortalPlans {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {string}
     * @memberof PortalPlans
     */
    portalPlanType: string;
    /**
     * 
     * @type {string}
     * @memberof PortalPlans
     */
    portalPlanTypeDescription?: string;
    /**
     * Maximum usage allowed within the interval
     * @type {number}
     * @memberof PortalPlans
     */
    planUsageLimit?: number;
    /**
     * 
     * @type {string}
     * @memberof PortalPlans
     */
    planUsageLimitInterval?: PortalPlansPlanUsageLimitIntervalEnum;
    /**
     * Rate limit in requests per second
     * @type {number}
     * @memberof PortalPlans
     */
    planRateLimitRps?: number;
    /**
     * 
     * @type {number}
     * @memberof PortalPlans
     */
    planApplicationLimit?: number;
}


/**
 * @export
 */
export const PortalPlansPlanUsageLimitIntervalEnum = {
    Day: 'day',
    Month: 'month',
    Year: 'year'
} as const;
export type PortalPlansPlanUsageLimitIntervalEnum = typeof PortalPlansPlanUsageLimitIntervalEnum[keyof typeof PortalPlansPlanUsageLimitIntervalEnum];


/**
 * Check if a given object implements the PortalPlans interface.
 */
export function instanceOfPortalPlans(value: object): value is PortalPlans {
    if (!('portalPlanType' in value) || value['portalPlanType'] === undefined) return false;
    return true;
}

export function PortalPlansFromJSON(json: any): PortalPlans {
    return PortalPlansFromJSONTyped(json, false);
}

export function PortalPlansFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortalPlans {
    if (json == null) {
        return json;
    }
    return {
        
        'portalPlanType': json['portal_plan_type'],
        'portalPlanTypeDescription': json['portal_plan_type_description'] == null ? undefined : json['portal_plan_type_description'],
        'planUsageLimit': json['plan_usage_limit'] == null ? undefined : json['plan_usage_limit'],
        'planUsageLimitInterval': json['plan_usage_limit_interval'] == null ? undefined : json['plan_usage_limit_interval'],
        'planRateLimitRps': json['plan_rate_limit_rps'] == null ? undefined : json['plan_rate_limit_rps'],
        'planApplicationLimit': json['plan_application_limit'] == null ? undefined : json['plan_application_limit'],
    };
}

export function PortalPlansToJSON(json: any): PortalPlans {
    return PortalPlansToJSONTyped(json, false);
}

export function PortalPlansToJSONTyped(value?: PortalPlans | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'portal_plan_type': value['portalPlanType'],
        'portal_plan_type_description': value['portalPlanTypeDescription'],
        'plan_usage_limit': value['planUsageLimit'],
        'plan_usage_limit_interval': value['planUsageLimitInterval'],
        'plan_rate_limit_rps': value['planRateLimitRps'],
        'plan_application_limit': value['planApplicationLimit'],
    };
}

