/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Onchain applications for processing relays through the network
 * @export
 * @interface Applications
 */
export interface Applications {
    /**
     * Blockchain address of the application
     * 
     * Note:
     * This is a Primary Key.<pk/>
     * @type {string}
     * @memberof Applications
     */
    applicationAddress: string;
    /**
     * Note:
     * This is a Foreign Key to `gateways.gateway_address`.<fk table='gateways' column='gateway_address'/>
     * @type {string}
     * @memberof Applications
     */
    gatewayAddress: string;
    /**
     * Note:
     * This is a Foreign Key to `services.service_id`.<fk table='services' column='service_id'/>
     * @type {string}
     * @memberof Applications
     */
    serviceId: string;
    /**
     * 
     * @type {number}
     * @memberof Applications
     */
    stakeAmount?: number;
    /**
     * 
     * @type {string}
     * @memberof Applications
     */
    stakeDenom?: string;
    /**
     * 
     * @type {string}
     * @memberof Applications
     */
    applicationPrivateKeyHex?: string;
    /**
     * Note:
     * This is a Foreign Key to `networks.network_id`.<fk table='networks' column='network_id'/>
     * @type {string}
     * @memberof Applications
     */
    networkId: string;
    /**
     * 
     * @type {string}
     * @memberof Applications
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Applications
     */
    updatedAt?: string;
}

/**
 * Check if a given object implements the Applications interface.
 */
export function instanceOfApplications(value: object): value is Applications {
    if (!('applicationAddress' in value) || value['applicationAddress'] === undefined) return false;
    if (!('gatewayAddress' in value) || value['gatewayAddress'] === undefined) return false;
    if (!('serviceId' in value) || value['serviceId'] === undefined) return false;
    if (!('networkId' in value) || value['networkId'] === undefined) return false;
    return true;
}

export function ApplicationsFromJSON(json: any): Applications {
    return ApplicationsFromJSONTyped(json, false);
}

export function ApplicationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Applications {
    if (json == null) {
        return json;
    }
    return {
        
        'applicationAddress': json['application_address'],
        'gatewayAddress': json['gateway_address'],
        'serviceId': json['service_id'],
        'stakeAmount': json['stake_amount'] == null ? undefined : json['stake_amount'],
        'stakeDenom': json['stake_denom'] == null ? undefined : json['stake_denom'],
        'applicationPrivateKeyHex': json['application_private_key_hex'] == null ? undefined : json['application_private_key_hex'],
        'networkId': json['network_id'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function ApplicationsToJSON(json: any): Applications {
    return ApplicationsToJSONTyped(json, false);
}

export function ApplicationsToJSONTyped(value?: Applications | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'application_address': value['applicationAddress'],
        'gateway_address': value['gatewayAddress'],
        'service_id': value['serviceId'],
        'stake_amount': value['stakeAmount'],
        'stake_denom': value['stakeDenom'],
        'application_private_key_hex': value['applicationPrivateKeyHex'],
        'network_id': value['networkId'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
    };
}

