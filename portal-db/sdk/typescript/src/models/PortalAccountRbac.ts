/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * User roles and permissions for specific portal accounts
 * @export
 * @interface PortalAccountRbac
 */
export interface PortalAccountRbac {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {number}
     * @memberof PortalAccountRbac
     */
    id: number;
    /**
     * Note:
     * This is a Foreign Key to `portal_accounts.portal_account_id`.<fk table='portal_accounts' column='portal_account_id'/>
     * @type {string}
     * @memberof PortalAccountRbac
     */
    portalAccountId: string;
    /**
     * Note:
     * This is a Foreign Key to `portal_users.portal_user_id`.<fk table='portal_users' column='portal_user_id'/>
     * @type {string}
     * @memberof PortalAccountRbac
     */
    portalUserId: string;
    /**
     * 
     * @type {string}
     * @memberof PortalAccountRbac
     */
    roleName: string;
    /**
     * 
     * @type {boolean}
     * @memberof PortalAccountRbac
     */
    userJoinedAccount?: boolean;
}

/**
 * Check if a given object implements the PortalAccountRbac interface.
 */
export function instanceOfPortalAccountRbac(value: object): value is PortalAccountRbac {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('portalAccountId' in value) || value['portalAccountId'] === undefined) return false;
    if (!('portalUserId' in value) || value['portalUserId'] === undefined) return false;
    if (!('roleName' in value) || value['roleName'] === undefined) return false;
    return true;
}

export function PortalAccountRbacFromJSON(json: any): PortalAccountRbac {
    return PortalAccountRbacFromJSONTyped(json, false);
}

export function PortalAccountRbacFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortalAccountRbac {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'portalAccountId': json['portal_account_id'],
        'portalUserId': json['portal_user_id'],
        'roleName': json['role_name'],
        'userJoinedAccount': json['user_joined_account'] == null ? undefined : json['user_joined_account'],
    };
}

export function PortalAccountRbacToJSON(json: any): PortalAccountRbac {
    return PortalAccountRbacToJSONTyped(json, false);
}

export function PortalAccountRbacToJSONTyped(value?: PortalAccountRbac | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'portal_account_id': value['portalAccountId'],
        'portal_user_id': value['portalUserId'],
        'role_name': value['roleName'],
        'user_joined_account': value['userJoinedAccount'],
    };
}

