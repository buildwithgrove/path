/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Supported blockchain services from the Pocket Network
 * @export
 * @interface Services
 */
export interface Services {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {string}
     * @memberof Services
     */
    serviceId: string;
    /**
     * 
     * @type {string}
     * @memberof Services
     */
    serviceName: string;
    /**
     * Cost in compute units for each relay
     * @type {number}
     * @memberof Services
     */
    computeUnitsPerRelay?: number;
    /**
     * Valid domains for this service
     * @type {Array<string>}
     * @memberof Services
     */
    serviceDomains: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Services
     */
    serviceOwnerAddress?: string;
    /**
     * Note:
     * This is a Foreign Key to `networks.network_id`.<fk table='networks' column='network_id'/>
     * @type {string}
     * @memberof Services
     */
    networkId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Services
     */
    active?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Services
     */
    beta?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Services
     */
    comingSoon?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Services
     */
    qualityFallbackEnabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Services
     */
    hardFallbackEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Services
     */
    svgIcon?: string;
    /**
     * 
     * @type {string}
     * @memberof Services
     */
    deletedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Services
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Services
     */
    updatedAt?: string;
}

/**
 * Check if a given object implements the Services interface.
 */
export function instanceOfServices(value: object): value is Services {
    if (!('serviceId' in value) || value['serviceId'] === undefined) return false;
    if (!('serviceName' in value) || value['serviceName'] === undefined) return false;
    if (!('serviceDomains' in value) || value['serviceDomains'] === undefined) return false;
    return true;
}

export function ServicesFromJSON(json: any): Services {
    return ServicesFromJSONTyped(json, false);
}

export function ServicesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Services {
    if (json == null) {
        return json;
    }
    return {
        
        'serviceId': json['service_id'],
        'serviceName': json['service_name'],
        'computeUnitsPerRelay': json['compute_units_per_relay'] == null ? undefined : json['compute_units_per_relay'],
        'serviceDomains': json['service_domains'],
        'serviceOwnerAddress': json['service_owner_address'] == null ? undefined : json['service_owner_address'],
        'networkId': json['network_id'] == null ? undefined : json['network_id'],
        'active': json['active'] == null ? undefined : json['active'],
        'beta': json['beta'] == null ? undefined : json['beta'],
        'comingSoon': json['coming_soon'] == null ? undefined : json['coming_soon'],
        'qualityFallbackEnabled': json['quality_fallback_enabled'] == null ? undefined : json['quality_fallback_enabled'],
        'hardFallbackEnabled': json['hard_fallback_enabled'] == null ? undefined : json['hard_fallback_enabled'],
        'svgIcon': json['svg_icon'] == null ? undefined : json['svg_icon'],
        'deletedAt': json['deleted_at'] == null ? undefined : json['deleted_at'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function ServicesToJSON(json: any): Services {
    return ServicesToJSONTyped(json, false);
}

export function ServicesToJSONTyped(value?: Services | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'service_id': value['serviceId'],
        'service_name': value['serviceName'],
        'compute_units_per_relay': value['computeUnitsPerRelay'],
        'service_domains': value['serviceDomains'],
        'service_owner_address': value['serviceOwnerAddress'],
        'network_id': value['networkId'],
        'active': value['active'],
        'beta': value['beta'],
        'coming_soon': value['comingSoon'],
        'quality_fallback_enabled': value['qualityFallbackEnabled'],
        'hard_fallback_enabled': value['hardFallbackEnabled'],
        'svg_icon': value['svgIcon'],
        'deleted_at': value['deletedAt'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
    };
}

