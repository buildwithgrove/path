/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Users who can access the portal and belong to multiple accounts
 * @export
 * @interface PortalUsers
 */
export interface PortalUsers {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {string}
     * @memberof PortalUsers
     */
    portalUserId: string;
    /**
     * Unique email address for the user
     * @type {string}
     * @memberof PortalUsers
     */
    portalUserEmail: string;
    /**
     * 
     * @type {boolean}
     * @memberof PortalUsers
     */
    signedUp?: boolean;
    /**
     * Whether user has admin privileges across the portal
     * @type {boolean}
     * @memberof PortalUsers
     */
    portalAdmin?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PortalUsers
     */
    deletedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalUsers
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalUsers
     */
    updatedAt?: string;
}

/**
 * Check if a given object implements the PortalUsers interface.
 */
export function instanceOfPortalUsers(value: object): value is PortalUsers {
    if (!('portalUserId' in value) || value['portalUserId'] === undefined) return false;
    if (!('portalUserEmail' in value) || value['portalUserEmail'] === undefined) return false;
    return true;
}

export function PortalUsersFromJSON(json: any): PortalUsers {
    return PortalUsersFromJSONTyped(json, false);
}

export function PortalUsersFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortalUsers {
    if (json == null) {
        return json;
    }
    return {
        
        'portalUserId': json['portal_user_id'],
        'portalUserEmail': json['portal_user_email'],
        'signedUp': json['signed_up'] == null ? undefined : json['signed_up'],
        'portalAdmin': json['portal_admin'] == null ? undefined : json['portal_admin'],
        'deletedAt': json['deleted_at'] == null ? undefined : json['deleted_at'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function PortalUsersToJSON(json: any): PortalUsers {
    return PortalUsersToJSONTyped(json, false);
}

export function PortalUsersToJSONTyped(value?: PortalUsers | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'portal_user_id': value['portalUserId'],
        'portal_user_email': value['portalUserEmail'],
        'signed_up': value['signedUp'],
        'portal_admin': value['portalAdmin'],
        'deleted_at': value['deletedAt'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
    };
}

