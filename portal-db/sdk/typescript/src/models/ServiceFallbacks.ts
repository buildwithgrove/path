/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Fallback URLs for services when primary endpoints fail
 * @export
 * @interface ServiceFallbacks
 */
export interface ServiceFallbacks {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {number}
     * @memberof ServiceFallbacks
     */
    serviceFallbackId: number;
    /**
     * Note:
     * This is a Foreign Key to `services.service_id`.<fk table='services' column='service_id'/>
     * @type {string}
     * @memberof ServiceFallbacks
     */
    serviceId: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceFallbacks
     */
    fallbackUrl: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceFallbacks
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceFallbacks
     */
    updatedAt?: string;
}

/**
 * Check if a given object implements the ServiceFallbacks interface.
 */
export function instanceOfServiceFallbacks(value: object): value is ServiceFallbacks {
    if (!('serviceFallbackId' in value) || value['serviceFallbackId'] === undefined) return false;
    if (!('serviceId' in value) || value['serviceId'] === undefined) return false;
    if (!('fallbackUrl' in value) || value['fallbackUrl'] === undefined) return false;
    return true;
}

export function ServiceFallbacksFromJSON(json: any): ServiceFallbacks {
    return ServiceFallbacksFromJSONTyped(json, false);
}

export function ServiceFallbacksFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceFallbacks {
    if (json == null) {
        return json;
    }
    return {
        
        'serviceFallbackId': json['service_fallback_id'],
        'serviceId': json['service_id'],
        'fallbackUrl': json['fallback_url'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function ServiceFallbacksToJSON(json: any): ServiceFallbacks {
    return ServiceFallbacksToJSONTyped(json, false);
}

export function ServiceFallbacksToJSONTyped(value?: ServiceFallbacks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'service_fallback_id': value['serviceFallbackId'],
        'service_id': value['serviceId'],
        'fallback_url': value['fallbackUrl'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
    };
}

