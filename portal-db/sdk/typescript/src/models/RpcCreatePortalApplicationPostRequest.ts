/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Creates a portal application with all associated RBAC entries in a single atomic transaction. 
 * Validates user membership in the account before creation. 
 * Returns the application details including the generated secret key.
 * This function is exposed via PostgREST as POST /rpc/create_portal_application
 * @export
 * @interface RpcCreatePortalApplicationPostRequest
 */
export interface RpcCreatePortalApplicationPostRequest {
    /**
     * 
     * @type {string}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pEmoji?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pFavoriteServiceIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pPortalAccountId: string;
    /**
     * 
     * @type {string}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pPortalApplicationDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pPortalApplicationName?: string;
    /**
     * 
     * @type {number}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pPortalApplicationUserLimit?: number;
    /**
     * 
     * @type {string}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pPortalApplicationUserLimitInterval?: string;
    /**
     * 
     * @type {number}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pPortalApplicationUserLimitRps?: number;
    /**
     * 
     * @type {string}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pPortalUserId: string;
    /**
     * 
     * @type {string}
     * @memberof RpcCreatePortalApplicationPostRequest
     */
    pSecretKeyRequired?: string;
}

/**
 * Check if a given object implements the RpcCreatePortalApplicationPostRequest interface.
 */
export function instanceOfRpcCreatePortalApplicationPostRequest(value: object): value is RpcCreatePortalApplicationPostRequest {
    if (!('pPortalAccountId' in value) || value['pPortalAccountId'] === undefined) return false;
    if (!('pPortalUserId' in value) || value['pPortalUserId'] === undefined) return false;
    return true;
}

export function RpcCreatePortalApplicationPostRequestFromJSON(json: any): RpcCreatePortalApplicationPostRequest {
    return RpcCreatePortalApplicationPostRequestFromJSONTyped(json, false);
}

export function RpcCreatePortalApplicationPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RpcCreatePortalApplicationPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'pEmoji': json['p_emoji'] == null ? undefined : json['p_emoji'],
        'pFavoriteServiceIds': json['p_favorite_service_ids'] == null ? undefined : json['p_favorite_service_ids'],
        'pPortalAccountId': json['p_portal_account_id'],
        'pPortalApplicationDescription': json['p_portal_application_description'] == null ? undefined : json['p_portal_application_description'],
        'pPortalApplicationName': json['p_portal_application_name'] == null ? undefined : json['p_portal_application_name'],
        'pPortalApplicationUserLimit': json['p_portal_application_user_limit'] == null ? undefined : json['p_portal_application_user_limit'],
        'pPortalApplicationUserLimitInterval': json['p_portal_application_user_limit_interval'] == null ? undefined : json['p_portal_application_user_limit_interval'],
        'pPortalApplicationUserLimitRps': json['p_portal_application_user_limit_rps'] == null ? undefined : json['p_portal_application_user_limit_rps'],
        'pPortalUserId': json['p_portal_user_id'],
        'pSecretKeyRequired': json['p_secret_key_required'] == null ? undefined : json['p_secret_key_required'],
    };
}

export function RpcCreatePortalApplicationPostRequestToJSON(json: any): RpcCreatePortalApplicationPostRequest {
    return RpcCreatePortalApplicationPostRequestToJSONTyped(json, false);
}

export function RpcCreatePortalApplicationPostRequestToJSONTyped(value?: RpcCreatePortalApplicationPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'p_emoji': value['pEmoji'],
        'p_favorite_service_ids': value['pFavoriteServiceIds'],
        'p_portal_account_id': value['pPortalAccountId'],
        'p_portal_application_description': value['pPortalApplicationDescription'],
        'p_portal_application_name': value['pPortalApplicationName'],
        'p_portal_application_user_limit': value['pPortalApplicationUserLimit'],
        'p_portal_application_user_limit_interval': value['pPortalApplicationUserLimitInterval'],
        'p_portal_application_user_limit_rps': value['pPortalApplicationUserLimitRps'],
        'p_portal_user_id': value['pPortalUserId'],
        'p_secret_key_required': value['pSecretKeyRequired'],
    };
}

