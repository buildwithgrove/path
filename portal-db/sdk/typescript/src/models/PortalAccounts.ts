/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Multi-tenant accounts with plans and billing integration
 * @export
 * @interface PortalAccounts
 */
export interface PortalAccounts {
    /**
     * Unique identifier for the portal account
     * 
     * Note:
     * This is a Primary Key.<pk/>
     * @type {string}
     * @memberof PortalAccounts
     */
    portalAccountId: string;
    /**
     * Note:
     * This is a Foreign Key to `organizations.organization_id`.<fk table='organizations' column='organization_id'/>
     * @type {number}
     * @memberof PortalAccounts
     */
    organizationId?: number;
    /**
     * Note:
     * This is a Foreign Key to `portal_plans.portal_plan_type`.<fk table='portal_plans' column='portal_plan_type'/>
     * @type {string}
     * @memberof PortalAccounts
     */
    portalPlanType: string;
    /**
     * 
     * @type {string}
     * @memberof PortalAccounts
     */
    userAccountName?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalAccounts
     */
    internalAccountName?: string;
    /**
     * 
     * @type {number}
     * @memberof PortalAccounts
     */
    portalAccountUserLimit?: number;
    /**
     * 
     * @type {string}
     * @memberof PortalAccounts
     */
    portalAccountUserLimitInterval?: PortalAccountsPortalAccountUserLimitIntervalEnum;
    /**
     * 
     * @type {number}
     * @memberof PortalAccounts
     */
    portalAccountUserLimitRps?: number;
    /**
     * 
     * @type {string}
     * @memberof PortalAccounts
     */
    billingType?: string;
    /**
     * Stripe subscription identifier for billing
     * @type {string}
     * @memberof PortalAccounts
     */
    stripeSubscriptionId?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalAccounts
     */
    gcpAccountId?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalAccounts
     */
    gcpEntitlementId?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalAccounts
     */
    deletedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalAccounts
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalAccounts
     */
    updatedAt?: string;
}


/**
 * @export
 */
export const PortalAccountsPortalAccountUserLimitIntervalEnum = {
    Day: 'day',
    Month: 'month',
    Year: 'year'
} as const;
export type PortalAccountsPortalAccountUserLimitIntervalEnum = typeof PortalAccountsPortalAccountUserLimitIntervalEnum[keyof typeof PortalAccountsPortalAccountUserLimitIntervalEnum];


/**
 * Check if a given object implements the PortalAccounts interface.
 */
export function instanceOfPortalAccounts(value: object): value is PortalAccounts {
    if (!('portalAccountId' in value) || value['portalAccountId'] === undefined) return false;
    if (!('portalPlanType' in value) || value['portalPlanType'] === undefined) return false;
    return true;
}

export function PortalAccountsFromJSON(json: any): PortalAccounts {
    return PortalAccountsFromJSONTyped(json, false);
}

export function PortalAccountsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortalAccounts {
    if (json == null) {
        return json;
    }
    return {
        
        'portalAccountId': json['portal_account_id'],
        'organizationId': json['organization_id'] == null ? undefined : json['organization_id'],
        'portalPlanType': json['portal_plan_type'],
        'userAccountName': json['user_account_name'] == null ? undefined : json['user_account_name'],
        'internalAccountName': json['internal_account_name'] == null ? undefined : json['internal_account_name'],
        'portalAccountUserLimit': json['portal_account_user_limit'] == null ? undefined : json['portal_account_user_limit'],
        'portalAccountUserLimitInterval': json['portal_account_user_limit_interval'] == null ? undefined : json['portal_account_user_limit_interval'],
        'portalAccountUserLimitRps': json['portal_account_user_limit_rps'] == null ? undefined : json['portal_account_user_limit_rps'],
        'billingType': json['billing_type'] == null ? undefined : json['billing_type'],
        'stripeSubscriptionId': json['stripe_subscription_id'] == null ? undefined : json['stripe_subscription_id'],
        'gcpAccountId': json['gcp_account_id'] == null ? undefined : json['gcp_account_id'],
        'gcpEntitlementId': json['gcp_entitlement_id'] == null ? undefined : json['gcp_entitlement_id'],
        'deletedAt': json['deleted_at'] == null ? undefined : json['deleted_at'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function PortalAccountsToJSON(json: any): PortalAccounts {
    return PortalAccountsToJSONTyped(json, false);
}

export function PortalAccountsToJSONTyped(value?: PortalAccounts | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'portal_account_id': value['portalAccountId'],
        'organization_id': value['organizationId'],
        'portal_plan_type': value['portalPlanType'],
        'user_account_name': value['userAccountName'],
        'internal_account_name': value['internalAccountName'],
        'portal_account_user_limit': value['portalAccountUserLimit'],
        'portal_account_user_limit_interval': value['portalAccountUserLimitInterval'],
        'portal_account_user_limit_rps': value['portalAccountUserLimitRps'],
        'billing_type': value['billingType'],
        'stripe_subscription_id': value['stripeSubscriptionId'],
        'gcp_account_id': value['gcpAccountId'],
        'gcp_entitlement_id': value['gcpEntitlementId'],
        'deleted_at': value['deletedAt'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
    };
}

