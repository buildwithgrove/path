/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Applications created within portal accounts with their own rate limits and settings
 * @export
 * @interface PortalApplications
 */
export interface PortalApplications {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * @type {string}
     * @memberof PortalApplications
     */
    portalApplicationId: string;
    /**
     * Note:
     * This is a Foreign Key to `portal_accounts.portal_account_id`.<fk table='portal_accounts' column='portal_account_id'/>
     * @type {string}
     * @memberof PortalApplications
     */
    portalAccountId: string;
    /**
     * 
     * @type {string}
     * @memberof PortalApplications
     */
    portalApplicationName?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalApplications
     */
    emoji?: string;
    /**
     * 
     * @type {number}
     * @memberof PortalApplications
     */
    portalApplicationUserLimit?: number;
    /**
     * 
     * @type {string}
     * @memberof PortalApplications
     */
    portalApplicationUserLimitInterval?: PortalApplicationsPortalApplicationUserLimitIntervalEnum;
    /**
     * 
     * @type {number}
     * @memberof PortalApplications
     */
    portalApplicationUserLimitRps?: number;
    /**
     * 
     * @type {string}
     * @memberof PortalApplications
     */
    portalApplicationDescription?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PortalApplications
     */
    favoriteServiceIds?: Array<string>;
    /**
     * Hashed secret key for application authentication
     * @type {string}
     * @memberof PortalApplications
     */
    secretKeyHash?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PortalApplications
     */
    secretKeyRequired?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PortalApplications
     */
    deletedAt?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalApplications
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof PortalApplications
     */
    updatedAt?: string;
}


/**
 * @export
 */
export const PortalApplicationsPortalApplicationUserLimitIntervalEnum = {
    Day: 'day',
    Month: 'month',
    Year: 'year'
} as const;
export type PortalApplicationsPortalApplicationUserLimitIntervalEnum = typeof PortalApplicationsPortalApplicationUserLimitIntervalEnum[keyof typeof PortalApplicationsPortalApplicationUserLimitIntervalEnum];


/**
 * Check if a given object implements the PortalApplications interface.
 */
export function instanceOfPortalApplications(value: object): value is PortalApplications {
    if (!('portalApplicationId' in value) || value['portalApplicationId'] === undefined) return false;
    if (!('portalAccountId' in value) || value['portalAccountId'] === undefined) return false;
    return true;
}

export function PortalApplicationsFromJSON(json: any): PortalApplications {
    return PortalApplicationsFromJSONTyped(json, false);
}

export function PortalApplicationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortalApplications {
    if (json == null) {
        return json;
    }
    return {
        
        'portalApplicationId': json['portal_application_id'],
        'portalAccountId': json['portal_account_id'],
        'portalApplicationName': json['portal_application_name'] == null ? undefined : json['portal_application_name'],
        'emoji': json['emoji'] == null ? undefined : json['emoji'],
        'portalApplicationUserLimit': json['portal_application_user_limit'] == null ? undefined : json['portal_application_user_limit'],
        'portalApplicationUserLimitInterval': json['portal_application_user_limit_interval'] == null ? undefined : json['portal_application_user_limit_interval'],
        'portalApplicationUserLimitRps': json['portal_application_user_limit_rps'] == null ? undefined : json['portal_application_user_limit_rps'],
        'portalApplicationDescription': json['portal_application_description'] == null ? undefined : json['portal_application_description'],
        'favoriteServiceIds': json['favorite_service_ids'] == null ? undefined : json['favorite_service_ids'],
        'secretKeyHash': json['secret_key_hash'] == null ? undefined : json['secret_key_hash'],
        'secretKeyRequired': json['secret_key_required'] == null ? undefined : json['secret_key_required'],
        'deletedAt': json['deleted_at'] == null ? undefined : json['deleted_at'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
        'updatedAt': json['updated_at'] == null ? undefined : json['updated_at'],
    };
}

export function PortalApplicationsToJSON(json: any): PortalApplications {
    return PortalApplicationsToJSONTyped(json, false);
}

export function PortalApplicationsToJSONTyped(value?: PortalApplications | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'portal_application_id': value['portalApplicationId'],
        'portal_account_id': value['portalAccountId'],
        'portal_application_name': value['portalApplicationName'],
        'emoji': value['emoji'],
        'portal_application_user_limit': value['portalApplicationUserLimit'],
        'portal_application_user_limit_interval': value['portalApplicationUserLimitInterval'],
        'portal_application_user_limit_rps': value['portalApplicationUserLimitRps'],
        'portal_application_description': value['portalApplicationDescription'],
        'favorite_service_ids': value['favoriteServiceIds'],
        'secret_key_hash': value['secretKeyHash'],
        'secret_key_required': value['secretKeyRequired'],
        'deleted_at': value['deletedAt'],
        'created_at': value['createdAt'],
        'updated_at': value['updatedAt'],
    };
}

