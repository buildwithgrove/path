/* tslint:disable */
/* eslint-disable */
/**
 * standard public schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 12.0.2 (a4e00ff)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RpcGenSaltPostRequest,
} from '../models/index';
import {
    RpcGenSaltPostRequestFromJSON,
    RpcGenSaltPostRequestToJSON,
} from '../models/index';

export interface RpcPgpArmorHeadersGetRequest {
    : string;
}

export interface RpcPgpArmorHeadersPostRequest {
    rpcGenSaltPostRequest: RpcGenSaltPostRequest;
    prefer?: RpcPgpArmorHeadersPostPreferEnum;
}

/**
 * 
 */
export class RpcPgpArmorHeadersApi extends runtime.BaseAPI {

    /**
     */
    async rpcPgpArmorHeadersGetRaw(requestParameters: RpcPgpArmorHeadersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters[''] == null) {
            throw new runtime.RequiredError(
                '',
                'Required parameter "" was null or undefined when calling rpcPgpArmorHeadersGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters[''] != null) {
            queryParameters[''] = requestParameters[''];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/rpc/pgp_armor_headers`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async rpcPgpArmorHeadersGet(requestParameters: RpcPgpArmorHeadersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.rpcPgpArmorHeadersGetRaw(requestParameters, initOverrides);
    }

    /**
     */
    async rpcPgpArmorHeadersPostRaw(requestParameters: RpcPgpArmorHeadersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['rpcGenSaltPostRequest'] == null) {
            throw new runtime.RequiredError(
                'rpcGenSaltPostRequest',
                'Required parameter "rpcGenSaltPostRequest" was null or undefined when calling rpcPgpArmorHeadersPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['prefer'] != null) {
            headerParameters['Prefer'] = String(requestParameters['prefer']);
        }


        let urlPath = `/rpc/pgp_armor_headers`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RpcGenSaltPostRequestToJSON(requestParameters['rpcGenSaltPostRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async rpcPgpArmorHeadersPost(requestParameters: RpcPgpArmorHeadersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.rpcPgpArmorHeadersPostRaw(requestParameters, initOverrides);
    }

}

/**
 * @export
 */
export const RpcPgpArmorHeadersPostPreferEnum = {
    ParamssingleObject: 'params=single-object'
} as const;
export type RpcPgpArmorHeadersPostPreferEnum = typeof RpcPgpArmorHeadersPostPreferEnum[keyof typeof RpcPgpArmorHeadersPostPreferEnum];
