/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** OpenAPI description (this document) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service_fallbacks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Fallback URLs for services when primary endpoints fail */
        get: {
            parameters: {
                query?: {
                    service_fallback_id?: components["parameters"]["rowFilter.service_fallbacks.service_fallback_id"];
                    service_id?: components["parameters"]["rowFilter.service_fallbacks.service_id"];
                    fallback_url?: components["parameters"]["rowFilter.service_fallbacks.fallback_url"];
                    created_at?: components["parameters"]["rowFilter.service_fallbacks.created_at"];
                    updated_at?: components["parameters"]["rowFilter.service_fallbacks.updated_at"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["service_fallbacks"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["service_fallbacks"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["service_fallbacks"][];
                        "text/csv": components["schemas"]["service_fallbacks"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Fallback URLs for services when primary endpoints fail */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["service_fallbacks"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Fallback URLs for services when primary endpoints fail */
        delete: {
            parameters: {
                query?: {
                    service_fallback_id?: components["parameters"]["rowFilter.service_fallbacks.service_fallback_id"];
                    service_id?: components["parameters"]["rowFilter.service_fallbacks.service_id"];
                    fallback_url?: components["parameters"]["rowFilter.service_fallbacks.fallback_url"];
                    created_at?: components["parameters"]["rowFilter.service_fallbacks.created_at"];
                    updated_at?: components["parameters"]["rowFilter.service_fallbacks.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Fallback URLs for services when primary endpoints fail */
        patch: {
            parameters: {
                query?: {
                    service_fallback_id?: components["parameters"]["rowFilter.service_fallbacks.service_fallback_id"];
                    service_id?: components["parameters"]["rowFilter.service_fallbacks.service_id"];
                    fallback_url?: components["parameters"]["rowFilter.service_fallbacks.fallback_url"];
                    created_at?: components["parameters"]["rowFilter.service_fallbacks.created_at"];
                    updated_at?: components["parameters"]["rowFilter.service_fallbacks.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["service_fallbacks"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/portal_plans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Available subscription plans for Portal Accounts */
        get: {
            parameters: {
                query?: {
                    portal_plan_type?: components["parameters"]["rowFilter.portal_plans.portal_plan_type"];
                    portal_plan_type_description?: components["parameters"]["rowFilter.portal_plans.portal_plan_type_description"];
                    /** @description Maximum usage allowed within the interval */
                    plan_usage_limit?: components["parameters"]["rowFilter.portal_plans.plan_usage_limit"];
                    plan_usage_limit_interval?: components["parameters"]["rowFilter.portal_plans.plan_usage_limit_interval"];
                    /** @description Rate limit in requests per second */
                    plan_rate_limit_rps?: components["parameters"]["rowFilter.portal_plans.plan_rate_limit_rps"];
                    plan_application_limit?: components["parameters"]["rowFilter.portal_plans.plan_application_limit"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["portal_plans"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["portal_plans"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["portal_plans"][];
                        "text/csv": components["schemas"]["portal_plans"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Available subscription plans for Portal Accounts */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["portal_plans"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Available subscription plans for Portal Accounts */
        delete: {
            parameters: {
                query?: {
                    portal_plan_type?: components["parameters"]["rowFilter.portal_plans.portal_plan_type"];
                    portal_plan_type_description?: components["parameters"]["rowFilter.portal_plans.portal_plan_type_description"];
                    /** @description Maximum usage allowed within the interval */
                    plan_usage_limit?: components["parameters"]["rowFilter.portal_plans.plan_usage_limit"];
                    plan_usage_limit_interval?: components["parameters"]["rowFilter.portal_plans.plan_usage_limit_interval"];
                    /** @description Rate limit in requests per second */
                    plan_rate_limit_rps?: components["parameters"]["rowFilter.portal_plans.plan_rate_limit_rps"];
                    plan_application_limit?: components["parameters"]["rowFilter.portal_plans.plan_application_limit"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Available subscription plans for Portal Accounts */
        patch: {
            parameters: {
                query?: {
                    portal_plan_type?: components["parameters"]["rowFilter.portal_plans.portal_plan_type"];
                    portal_plan_type_description?: components["parameters"]["rowFilter.portal_plans.portal_plan_type_description"];
                    /** @description Maximum usage allowed within the interval */
                    plan_usage_limit?: components["parameters"]["rowFilter.portal_plans.plan_usage_limit"];
                    plan_usage_limit_interval?: components["parameters"]["rowFilter.portal_plans.plan_usage_limit_interval"];
                    /** @description Rate limit in requests per second */
                    plan_rate_limit_rps?: components["parameters"]["rowFilter.portal_plans.plan_rate_limit_rps"];
                    plan_application_limit?: components["parameters"]["rowFilter.portal_plans.plan_application_limit"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["portal_plans"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/applications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Onchain applications for processing relays through the network */
        get: {
            parameters: {
                query?: {
                    /** @description Blockchain address of the application */
                    application_address?: components["parameters"]["rowFilter.applications.application_address"];
                    gateway_address?: components["parameters"]["rowFilter.applications.gateway_address"];
                    service_id?: components["parameters"]["rowFilter.applications.service_id"];
                    stake_amount?: components["parameters"]["rowFilter.applications.stake_amount"];
                    stake_denom?: components["parameters"]["rowFilter.applications.stake_denom"];
                    application_private_key_hex?: components["parameters"]["rowFilter.applications.application_private_key_hex"];
                    network_id?: components["parameters"]["rowFilter.applications.network_id"];
                    created_at?: components["parameters"]["rowFilter.applications.created_at"];
                    updated_at?: components["parameters"]["rowFilter.applications.updated_at"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["applications"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["applications"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["applications"][];
                        "text/csv": components["schemas"]["applications"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Onchain applications for processing relays through the network */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["applications"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Onchain applications for processing relays through the network */
        delete: {
            parameters: {
                query?: {
                    /** @description Blockchain address of the application */
                    application_address?: components["parameters"]["rowFilter.applications.application_address"];
                    gateway_address?: components["parameters"]["rowFilter.applications.gateway_address"];
                    service_id?: components["parameters"]["rowFilter.applications.service_id"];
                    stake_amount?: components["parameters"]["rowFilter.applications.stake_amount"];
                    stake_denom?: components["parameters"]["rowFilter.applications.stake_denom"];
                    application_private_key_hex?: components["parameters"]["rowFilter.applications.application_private_key_hex"];
                    network_id?: components["parameters"]["rowFilter.applications.network_id"];
                    created_at?: components["parameters"]["rowFilter.applications.created_at"];
                    updated_at?: components["parameters"]["rowFilter.applications.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Onchain applications for processing relays through the network */
        patch: {
            parameters: {
                query?: {
                    /** @description Blockchain address of the application */
                    application_address?: components["parameters"]["rowFilter.applications.application_address"];
                    gateway_address?: components["parameters"]["rowFilter.applications.gateway_address"];
                    service_id?: components["parameters"]["rowFilter.applications.service_id"];
                    stake_amount?: components["parameters"]["rowFilter.applications.stake_amount"];
                    stake_denom?: components["parameters"]["rowFilter.applications.stake_denom"];
                    application_private_key_hex?: components["parameters"]["rowFilter.applications.application_private_key_hex"];
                    network_id?: components["parameters"]["rowFilter.applications.network_id"];
                    created_at?: components["parameters"]["rowFilter.applications.created_at"];
                    updated_at?: components["parameters"]["rowFilter.applications.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["applications"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/portal_applications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Applications created within portal accounts with their own rate limits and settings */
        get: {
            parameters: {
                query?: {
                    portal_application_id?: components["parameters"]["rowFilter.portal_applications.portal_application_id"];
                    portal_account_id?: components["parameters"]["rowFilter.portal_applications.portal_account_id"];
                    portal_application_name?: components["parameters"]["rowFilter.portal_applications.portal_application_name"];
                    emoji?: components["parameters"]["rowFilter.portal_applications.emoji"];
                    portal_application_user_limit?: components["parameters"]["rowFilter.portal_applications.portal_application_user_limit"];
                    portal_application_user_limit_interval?: components["parameters"]["rowFilter.portal_applications.portal_application_user_limit_interval"];
                    portal_application_user_limit_rps?: components["parameters"]["rowFilter.portal_applications.portal_application_user_limit_rps"];
                    portal_application_description?: components["parameters"]["rowFilter.portal_applications.portal_application_description"];
                    favorite_service_ids?: components["parameters"]["rowFilter.portal_applications.favorite_service_ids"];
                    /** @description Hashed secret key for application authentication */
                    secret_key_hash?: components["parameters"]["rowFilter.portal_applications.secret_key_hash"];
                    secret_key_required?: components["parameters"]["rowFilter.portal_applications.secret_key_required"];
                    deleted_at?: components["parameters"]["rowFilter.portal_applications.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.portal_applications.created_at"];
                    updated_at?: components["parameters"]["rowFilter.portal_applications.updated_at"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["portal_applications"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["portal_applications"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["portal_applications"][];
                        "text/csv": components["schemas"]["portal_applications"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Applications created within portal accounts with their own rate limits and settings */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["portal_applications"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Applications created within portal accounts with their own rate limits and settings */
        delete: {
            parameters: {
                query?: {
                    portal_application_id?: components["parameters"]["rowFilter.portal_applications.portal_application_id"];
                    portal_account_id?: components["parameters"]["rowFilter.portal_applications.portal_account_id"];
                    portal_application_name?: components["parameters"]["rowFilter.portal_applications.portal_application_name"];
                    emoji?: components["parameters"]["rowFilter.portal_applications.emoji"];
                    portal_application_user_limit?: components["parameters"]["rowFilter.portal_applications.portal_application_user_limit"];
                    portal_application_user_limit_interval?: components["parameters"]["rowFilter.portal_applications.portal_application_user_limit_interval"];
                    portal_application_user_limit_rps?: components["parameters"]["rowFilter.portal_applications.portal_application_user_limit_rps"];
                    portal_application_description?: components["parameters"]["rowFilter.portal_applications.portal_application_description"];
                    favorite_service_ids?: components["parameters"]["rowFilter.portal_applications.favorite_service_ids"];
                    /** @description Hashed secret key for application authentication */
                    secret_key_hash?: components["parameters"]["rowFilter.portal_applications.secret_key_hash"];
                    secret_key_required?: components["parameters"]["rowFilter.portal_applications.secret_key_required"];
                    deleted_at?: components["parameters"]["rowFilter.portal_applications.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.portal_applications.created_at"];
                    updated_at?: components["parameters"]["rowFilter.portal_applications.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Applications created within portal accounts with their own rate limits and settings */
        patch: {
            parameters: {
                query?: {
                    portal_application_id?: components["parameters"]["rowFilter.portal_applications.portal_application_id"];
                    portal_account_id?: components["parameters"]["rowFilter.portal_applications.portal_account_id"];
                    portal_application_name?: components["parameters"]["rowFilter.portal_applications.portal_application_name"];
                    emoji?: components["parameters"]["rowFilter.portal_applications.emoji"];
                    portal_application_user_limit?: components["parameters"]["rowFilter.portal_applications.portal_application_user_limit"];
                    portal_application_user_limit_interval?: components["parameters"]["rowFilter.portal_applications.portal_application_user_limit_interval"];
                    portal_application_user_limit_rps?: components["parameters"]["rowFilter.portal_applications.portal_application_user_limit_rps"];
                    portal_application_description?: components["parameters"]["rowFilter.portal_applications.portal_application_description"];
                    favorite_service_ids?: components["parameters"]["rowFilter.portal_applications.favorite_service_ids"];
                    /** @description Hashed secret key for application authentication */
                    secret_key_hash?: components["parameters"]["rowFilter.portal_applications.secret_key_hash"];
                    secret_key_required?: components["parameters"]["rowFilter.portal_applications.secret_key_required"];
                    deleted_at?: components["parameters"]["rowFilter.portal_applications.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.portal_applications.created_at"];
                    updated_at?: components["parameters"]["rowFilter.portal_applications.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["portal_applications"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/services": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Supported blockchain services from the Pocket Network */
        get: {
            parameters: {
                query?: {
                    service_id?: components["parameters"]["rowFilter.services.service_id"];
                    service_name?: components["parameters"]["rowFilter.services.service_name"];
                    /** @description Cost in compute units for each relay */
                    compute_units_per_relay?: components["parameters"]["rowFilter.services.compute_units_per_relay"];
                    /** @description Valid domains for this service */
                    service_domains?: components["parameters"]["rowFilter.services.service_domains"];
                    service_owner_address?: components["parameters"]["rowFilter.services.service_owner_address"];
                    network_id?: components["parameters"]["rowFilter.services.network_id"];
                    active?: components["parameters"]["rowFilter.services.active"];
                    beta?: components["parameters"]["rowFilter.services.beta"];
                    coming_soon?: components["parameters"]["rowFilter.services.coming_soon"];
                    quality_fallback_enabled?: components["parameters"]["rowFilter.services.quality_fallback_enabled"];
                    hard_fallback_enabled?: components["parameters"]["rowFilter.services.hard_fallback_enabled"];
                    svg_icon?: components["parameters"]["rowFilter.services.svg_icon"];
                    deleted_at?: components["parameters"]["rowFilter.services.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.services.created_at"];
                    updated_at?: components["parameters"]["rowFilter.services.updated_at"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["services"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["services"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["services"][];
                        "text/csv": components["schemas"]["services"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Supported blockchain services from the Pocket Network */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["services"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Supported blockchain services from the Pocket Network */
        delete: {
            parameters: {
                query?: {
                    service_id?: components["parameters"]["rowFilter.services.service_id"];
                    service_name?: components["parameters"]["rowFilter.services.service_name"];
                    /** @description Cost in compute units for each relay */
                    compute_units_per_relay?: components["parameters"]["rowFilter.services.compute_units_per_relay"];
                    /** @description Valid domains for this service */
                    service_domains?: components["parameters"]["rowFilter.services.service_domains"];
                    service_owner_address?: components["parameters"]["rowFilter.services.service_owner_address"];
                    network_id?: components["parameters"]["rowFilter.services.network_id"];
                    active?: components["parameters"]["rowFilter.services.active"];
                    beta?: components["parameters"]["rowFilter.services.beta"];
                    coming_soon?: components["parameters"]["rowFilter.services.coming_soon"];
                    quality_fallback_enabled?: components["parameters"]["rowFilter.services.quality_fallback_enabled"];
                    hard_fallback_enabled?: components["parameters"]["rowFilter.services.hard_fallback_enabled"];
                    svg_icon?: components["parameters"]["rowFilter.services.svg_icon"];
                    deleted_at?: components["parameters"]["rowFilter.services.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.services.created_at"];
                    updated_at?: components["parameters"]["rowFilter.services.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Supported blockchain services from the Pocket Network */
        patch: {
            parameters: {
                query?: {
                    service_id?: components["parameters"]["rowFilter.services.service_id"];
                    service_name?: components["parameters"]["rowFilter.services.service_name"];
                    /** @description Cost in compute units for each relay */
                    compute_units_per_relay?: components["parameters"]["rowFilter.services.compute_units_per_relay"];
                    /** @description Valid domains for this service */
                    service_domains?: components["parameters"]["rowFilter.services.service_domains"];
                    service_owner_address?: components["parameters"]["rowFilter.services.service_owner_address"];
                    network_id?: components["parameters"]["rowFilter.services.network_id"];
                    active?: components["parameters"]["rowFilter.services.active"];
                    beta?: components["parameters"]["rowFilter.services.beta"];
                    coming_soon?: components["parameters"]["rowFilter.services.coming_soon"];
                    quality_fallback_enabled?: components["parameters"]["rowFilter.services.quality_fallback_enabled"];
                    hard_fallback_enabled?: components["parameters"]["rowFilter.services.hard_fallback_enabled"];
                    svg_icon?: components["parameters"]["rowFilter.services.svg_icon"];
                    deleted_at?: components["parameters"]["rowFilter.services.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.services.created_at"];
                    updated_at?: components["parameters"]["rowFilter.services.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["services"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/portal_accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Multi-tenant accounts with plans and billing integration */
        get: {
            parameters: {
                query?: {
                    /** @description Unique identifier for the portal account */
                    portal_account_id?: components["parameters"]["rowFilter.portal_accounts.portal_account_id"];
                    organization_id?: components["parameters"]["rowFilter.portal_accounts.organization_id"];
                    portal_plan_type?: components["parameters"]["rowFilter.portal_accounts.portal_plan_type"];
                    user_account_name?: components["parameters"]["rowFilter.portal_accounts.user_account_name"];
                    internal_account_name?: components["parameters"]["rowFilter.portal_accounts.internal_account_name"];
                    portal_account_user_limit?: components["parameters"]["rowFilter.portal_accounts.portal_account_user_limit"];
                    portal_account_user_limit_interval?: components["parameters"]["rowFilter.portal_accounts.portal_account_user_limit_interval"];
                    portal_account_user_limit_rps?: components["parameters"]["rowFilter.portal_accounts.portal_account_user_limit_rps"];
                    billing_type?: components["parameters"]["rowFilter.portal_accounts.billing_type"];
                    /** @description Stripe subscription identifier for billing */
                    stripe_subscription_id?: components["parameters"]["rowFilter.portal_accounts.stripe_subscription_id"];
                    gcp_account_id?: components["parameters"]["rowFilter.portal_accounts.gcp_account_id"];
                    gcp_entitlement_id?: components["parameters"]["rowFilter.portal_accounts.gcp_entitlement_id"];
                    deleted_at?: components["parameters"]["rowFilter.portal_accounts.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.portal_accounts.created_at"];
                    updated_at?: components["parameters"]["rowFilter.portal_accounts.updated_at"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["portal_accounts"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["portal_accounts"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["portal_accounts"][];
                        "text/csv": components["schemas"]["portal_accounts"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Multi-tenant accounts with plans and billing integration */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["portal_accounts"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Multi-tenant accounts with plans and billing integration */
        delete: {
            parameters: {
                query?: {
                    /** @description Unique identifier for the portal account */
                    portal_account_id?: components["parameters"]["rowFilter.portal_accounts.portal_account_id"];
                    organization_id?: components["parameters"]["rowFilter.portal_accounts.organization_id"];
                    portal_plan_type?: components["parameters"]["rowFilter.portal_accounts.portal_plan_type"];
                    user_account_name?: components["parameters"]["rowFilter.portal_accounts.user_account_name"];
                    internal_account_name?: components["parameters"]["rowFilter.portal_accounts.internal_account_name"];
                    portal_account_user_limit?: components["parameters"]["rowFilter.portal_accounts.portal_account_user_limit"];
                    portal_account_user_limit_interval?: components["parameters"]["rowFilter.portal_accounts.portal_account_user_limit_interval"];
                    portal_account_user_limit_rps?: components["parameters"]["rowFilter.portal_accounts.portal_account_user_limit_rps"];
                    billing_type?: components["parameters"]["rowFilter.portal_accounts.billing_type"];
                    /** @description Stripe subscription identifier for billing */
                    stripe_subscription_id?: components["parameters"]["rowFilter.portal_accounts.stripe_subscription_id"];
                    gcp_account_id?: components["parameters"]["rowFilter.portal_accounts.gcp_account_id"];
                    gcp_entitlement_id?: components["parameters"]["rowFilter.portal_accounts.gcp_entitlement_id"];
                    deleted_at?: components["parameters"]["rowFilter.portal_accounts.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.portal_accounts.created_at"];
                    updated_at?: components["parameters"]["rowFilter.portal_accounts.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Multi-tenant accounts with plans and billing integration */
        patch: {
            parameters: {
                query?: {
                    /** @description Unique identifier for the portal account */
                    portal_account_id?: components["parameters"]["rowFilter.portal_accounts.portal_account_id"];
                    organization_id?: components["parameters"]["rowFilter.portal_accounts.organization_id"];
                    portal_plan_type?: components["parameters"]["rowFilter.portal_accounts.portal_plan_type"];
                    user_account_name?: components["parameters"]["rowFilter.portal_accounts.user_account_name"];
                    internal_account_name?: components["parameters"]["rowFilter.portal_accounts.internal_account_name"];
                    portal_account_user_limit?: components["parameters"]["rowFilter.portal_accounts.portal_account_user_limit"];
                    portal_account_user_limit_interval?: components["parameters"]["rowFilter.portal_accounts.portal_account_user_limit_interval"];
                    portal_account_user_limit_rps?: components["parameters"]["rowFilter.portal_accounts.portal_account_user_limit_rps"];
                    billing_type?: components["parameters"]["rowFilter.portal_accounts.billing_type"];
                    /** @description Stripe subscription identifier for billing */
                    stripe_subscription_id?: components["parameters"]["rowFilter.portal_accounts.stripe_subscription_id"];
                    gcp_account_id?: components["parameters"]["rowFilter.portal_accounts.gcp_account_id"];
                    gcp_entitlement_id?: components["parameters"]["rowFilter.portal_accounts.gcp_entitlement_id"];
                    deleted_at?: components["parameters"]["rowFilter.portal_accounts.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.portal_accounts.created_at"];
                    updated_at?: components["parameters"]["rowFilter.portal_accounts.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["portal_accounts"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/organizations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Companies or customer groups that can be attached to Portal Accounts */
        get: {
            parameters: {
                query?: {
                    organization_id?: components["parameters"]["rowFilter.organizations.organization_id"];
                    /** @description Name of the organization */
                    organization_name?: components["parameters"]["rowFilter.organizations.organization_name"];
                    /** @description Soft delete timestamp */
                    deleted_at?: components["parameters"]["rowFilter.organizations.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.organizations.created_at"];
                    updated_at?: components["parameters"]["rowFilter.organizations.updated_at"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["organizations"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["organizations"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["organizations"][];
                        "text/csv": components["schemas"]["organizations"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Companies or customer groups that can be attached to Portal Accounts */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["organizations"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Companies or customer groups that can be attached to Portal Accounts */
        delete: {
            parameters: {
                query?: {
                    organization_id?: components["parameters"]["rowFilter.organizations.organization_id"];
                    /** @description Name of the organization */
                    organization_name?: components["parameters"]["rowFilter.organizations.organization_name"];
                    /** @description Soft delete timestamp */
                    deleted_at?: components["parameters"]["rowFilter.organizations.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.organizations.created_at"];
                    updated_at?: components["parameters"]["rowFilter.organizations.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Companies or customer groups that can be attached to Portal Accounts */
        patch: {
            parameters: {
                query?: {
                    organization_id?: components["parameters"]["rowFilter.organizations.organization_id"];
                    /** @description Name of the organization */
                    organization_name?: components["parameters"]["rowFilter.organizations.organization_name"];
                    /** @description Soft delete timestamp */
                    deleted_at?: components["parameters"]["rowFilter.organizations.deleted_at"];
                    created_at?: components["parameters"]["rowFilter.organizations.created_at"];
                    updated_at?: components["parameters"]["rowFilter.organizations.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["organizations"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/networks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Supported blockchain networks (Pocket mainnet, testnet, etc.) */
        get: {
            parameters: {
                query?: {
                    network_id?: components["parameters"]["rowFilter.networks.network_id"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["networks"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["networks"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["networks"][];
                        "text/csv": components["schemas"]["networks"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Supported blockchain networks (Pocket mainnet, testnet, etc.) */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["networks"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Supported blockchain networks (Pocket mainnet, testnet, etc.) */
        delete: {
            parameters: {
                query?: {
                    network_id?: components["parameters"]["rowFilter.networks.network_id"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Supported blockchain networks (Pocket mainnet, testnet, etc.) */
        patch: {
            parameters: {
                query?: {
                    network_id?: components["parameters"]["rowFilter.networks.network_id"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["networks"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/gateways": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Onchain gateway information including stake and network details */
        get: {
            parameters: {
                query?: {
                    /** @description Blockchain address of the gateway */
                    gateway_address?: components["parameters"]["rowFilter.gateways.gateway_address"];
                    /** @description Amount of tokens staked by the gateway */
                    stake_amount?: components["parameters"]["rowFilter.gateways.stake_amount"];
                    stake_denom?: components["parameters"]["rowFilter.gateways.stake_denom"];
                    network_id?: components["parameters"]["rowFilter.gateways.network_id"];
                    gateway_private_key_hex?: components["parameters"]["rowFilter.gateways.gateway_private_key_hex"];
                    created_at?: components["parameters"]["rowFilter.gateways.created_at"];
                    updated_at?: components["parameters"]["rowFilter.gateways.updated_at"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["gateways"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["gateways"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["gateways"][];
                        "text/csv": components["schemas"]["gateways"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Onchain gateway information including stake and network details */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["gateways"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Onchain gateway information including stake and network details */
        delete: {
            parameters: {
                query?: {
                    /** @description Blockchain address of the gateway */
                    gateway_address?: components["parameters"]["rowFilter.gateways.gateway_address"];
                    /** @description Amount of tokens staked by the gateway */
                    stake_amount?: components["parameters"]["rowFilter.gateways.stake_amount"];
                    stake_denom?: components["parameters"]["rowFilter.gateways.stake_denom"];
                    network_id?: components["parameters"]["rowFilter.gateways.network_id"];
                    gateway_private_key_hex?: components["parameters"]["rowFilter.gateways.gateway_private_key_hex"];
                    created_at?: components["parameters"]["rowFilter.gateways.created_at"];
                    updated_at?: components["parameters"]["rowFilter.gateways.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Onchain gateway information including stake and network details */
        patch: {
            parameters: {
                query?: {
                    /** @description Blockchain address of the gateway */
                    gateway_address?: components["parameters"]["rowFilter.gateways.gateway_address"];
                    /** @description Amount of tokens staked by the gateway */
                    stake_amount?: components["parameters"]["rowFilter.gateways.stake_amount"];
                    stake_denom?: components["parameters"]["rowFilter.gateways.stake_denom"];
                    network_id?: components["parameters"]["rowFilter.gateways.network_id"];
                    gateway_private_key_hex?: components["parameters"]["rowFilter.gateways.gateway_private_key_hex"];
                    created_at?: components["parameters"]["rowFilter.gateways.created_at"];
                    updated_at?: components["parameters"]["rowFilter.gateways.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["gateways"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/service_endpoints": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Available endpoint types for each service */
        get: {
            parameters: {
                query?: {
                    endpoint_id?: components["parameters"]["rowFilter.service_endpoints.endpoint_id"];
                    service_id?: components["parameters"]["rowFilter.service_endpoints.service_id"];
                    endpoint_type?: components["parameters"]["rowFilter.service_endpoints.endpoint_type"];
                    created_at?: components["parameters"]["rowFilter.service_endpoints.created_at"];
                    updated_at?: components["parameters"]["rowFilter.service_endpoints.updated_at"];
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                    /** @description Ordering */
                    order?: components["parameters"]["order"];
                    /** @description Limiting and Pagination */
                    offset?: components["parameters"]["offset"];
                    /** @description Limiting and Pagination */
                    limit?: components["parameters"]["limit"];
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: components["parameters"]["range"];
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: components["parameters"]["rangeUnit"];
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferCount"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["service_endpoints"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["service_endpoints"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["service_endpoints"][];
                        "text/csv": components["schemas"]["service_endpoints"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Available endpoint types for each service */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: components["parameters"]["select"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferPost"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["service_endpoints"];
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Available endpoint types for each service */
        delete: {
            parameters: {
                query?: {
                    endpoint_id?: components["parameters"]["rowFilter.service_endpoints.endpoint_id"];
                    service_id?: components["parameters"]["rowFilter.service_endpoints.service_id"];
                    endpoint_type?: components["parameters"]["rowFilter.service_endpoints.endpoint_type"];
                    created_at?: components["parameters"]["rowFilter.service_endpoints.created_at"];
                    updated_at?: components["parameters"]["rowFilter.service_endpoints.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Available endpoint types for each service */
        patch: {
            parameters: {
                query?: {
                    endpoint_id?: components["parameters"]["rowFilter.service_endpoints.endpoint_id"];
                    service_id?: components["parameters"]["rowFilter.service_endpoints.service_id"];
                    endpoint_type?: components["parameters"]["rowFilter.service_endpoints.endpoint_type"];
                    created_at?: components["parameters"]["rowFilter.service_endpoints.created_at"];
                    updated_at?: components["parameters"]["rowFilter.service_endpoints.updated_at"];
                };
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferReturn"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: components["requestBodies"]["service_endpoints"];
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/rpc/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferParams"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": Record<string, never>;
                    "application/vnd.pgrst.object+json;nulls=stripped": Record<string, never>;
                    "application/vnd.pgrst.object+json": Record<string, never>;
                    "text/csv": Record<string, never>;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/create_portal_application": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Creates a portal application with all associated RBAC entries in a single atomic transaction.
         * @description Validates user membership in the account before creation.
         *     Returns the application details including the generated secret key.
         *     This function is exposed via PostgREST as POST /rpc/create_portal_application
         */
        get: {
            parameters: {
                query: {
                    p_portal_account_id: string;
                    p_portal_user_id: string;
                    p_portal_application_name?: string;
                    p_emoji?: string;
                    p_portal_application_user_limit?: number;
                    p_portal_application_user_limit_interval?: string;
                    p_portal_application_user_limit_rps?: number;
                    p_portal_application_description?: string;
                    p_favorite_service_ids?: string;
                    p_secret_key_required?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /**
         * Creates a portal application with all associated RBAC entries in a single atomic transaction.
         * @description Validates user membership in the account before creation.
         *     Returns the application details including the generated secret key.
         *     This function is exposed via PostgREST as POST /rpc/create_portal_application
         */
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: components["parameters"]["preferParams"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: character varying */
                        p_emoji?: string;
                        /** Format: character varying[] */
                        p_favorite_service_ids?: string[];
                        /** Format: character varying */
                        p_portal_account_id: string;
                        /** Format: character varying */
                        p_portal_application_description?: string;
                        /** Format: character varying */
                        p_portal_application_name?: string;
                        /** Format: integer */
                        p_portal_application_user_limit?: number;
                        /** Format: plan_interval */
                        p_portal_application_user_limit_interval?: string;
                        /** Format: integer */
                        p_portal_application_user_limit_rps?: number;
                        /** Format: character varying */
                        p_portal_user_id: string;
                        /** Format: text */
                        p_secret_key_required?: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: character varying */
                        p_emoji?: string;
                        /** Format: character varying[] */
                        p_favorite_service_ids?: string[];
                        /** Format: character varying */
                        p_portal_account_id: string;
                        /** Format: character varying */
                        p_portal_application_description?: string;
                        /** Format: character varying */
                        p_portal_application_name?: string;
                        /** Format: integer */
                        p_portal_application_user_limit?: number;
                        /** Format: plan_interval */
                        p_portal_application_user_limit_interval?: string;
                        /** Format: integer */
                        p_portal_application_user_limit_rps?: number;
                        /** Format: character varying */
                        p_portal_user_id: string;
                        /** Format: text */
                        p_secret_key_required?: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: character varying */
                        p_emoji?: string;
                        /** Format: character varying[] */
                        p_favorite_service_ids?: string[];
                        /** Format: character varying */
                        p_portal_account_id: string;
                        /** Format: character varying */
                        p_portal_application_description?: string;
                        /** Format: character varying */
                        p_portal_application_name?: string;
                        /** Format: integer */
                        p_portal_application_user_limit?: number;
                        /** Format: plan_interval */
                        p_portal_application_user_limit_interval?: string;
                        /** Format: integer */
                        p_portal_application_user_limit_rps?: number;
                        /** Format: character varying */
                        p_portal_user_id: string;
                        /** Format: text */
                        p_secret_key_required?: string;
                    };
                    "text/csv": {
                        /** Format: character varying */
                        p_emoji?: string;
                        /** Format: character varying[] */
                        p_favorite_service_ids?: string[];
                        /** Format: character varying */
                        p_portal_account_id: string;
                        /** Format: character varying */
                        p_portal_application_description?: string;
                        /** Format: character varying */
                        p_portal_application_name?: string;
                        /** Format: integer */
                        p_portal_application_user_limit?: number;
                        /** Format: plan_interval */
                        p_portal_application_user_limit_interval?: string;
                        /** Format: integer */
                        p_portal_application_user_limit_rps?: number;
                        /** Format: character varying */
                        p_portal_user_id: string;
                        /** Format: text */
                        p_secret_key_required?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Fallback URLs for services when primary endpoints fail */
        service_fallbacks: {
            /**
             * Format: integer
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            service_fallback_id: number;
            /**
             * Format: character varying
             * @description Note:
             *     This is a Foreign Key to `services.service_id`.<fk table='services' column='service_id'/>
             */
            service_id: string;
            /** Format: character varying */
            fallback_url: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            created_at: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            updated_at: string;
        };
        /** @description Available subscription plans for Portal Accounts */
        portal_plans: {
            /**
             * Format: character varying
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            portal_plan_type: string;
            /** Format: character varying */
            portal_plan_type_description?: string;
            /**
             * Format: integer
             * @description Maximum usage allowed within the interval
             */
            plan_usage_limit?: number;
            /**
             * Format: public.plan_interval
             * @enum {string}
             */
            plan_usage_limit_interval?: "day" | "month" | "year";
            /**
             * Format: integer
             * @description Rate limit in requests per second
             */
            plan_rate_limit_rps?: number;
            /** Format: integer */
            plan_application_limit?: number;
        };
        /** @description Onchain applications for processing relays through the network */
        applications: {
            /**
             * Format: character varying
             * @description Blockchain address of the application
             *
             *     Note:
             *     This is a Primary Key.<pk/>
             */
            application_address: string;
            /**
             * Format: character varying
             * @description Note:
             *     This is a Foreign Key to `gateways.gateway_address`.<fk table='gateways' column='gateway_address'/>
             */
            gateway_address: string;
            /**
             * Format: character varying
             * @description Note:
             *     This is a Foreign Key to `services.service_id`.<fk table='services' column='service_id'/>
             */
            service_id: string;
            /** Format: bigint */
            stake_amount?: number;
            /** Format: character varying */
            stake_denom?: string;
            /** Format: character varying */
            application_private_key_hex?: string;
            /**
             * Format: character varying
             * @description Note:
             *     This is a Foreign Key to `networks.network_id`.<fk table='networks' column='network_id'/>
             */
            network_id: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            created_at: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            updated_at: string;
        };
        /** @description Applications created within portal accounts with their own rate limits and settings */
        portal_applications: {
            /**
             * Format: character varying
             * @description Note:
             *     This is a Primary Key.<pk/>
             * @default gen_random_uuid()
             */
            portal_application_id: string;
            /**
             * Format: character varying
             * @description Note:
             *     This is a Foreign Key to `portal_accounts.portal_account_id`.<fk table='portal_accounts' column='portal_account_id'/>
             */
            portal_account_id: string;
            /** Format: character varying */
            portal_application_name?: string;
            /** Format: character varying */
            emoji?: string;
            /** Format: integer */
            portal_application_user_limit?: number;
            /**
             * Format: public.plan_interval
             * @enum {string}
             */
            portal_application_user_limit_interval?: "day" | "month" | "year";
            /** Format: integer */
            portal_application_user_limit_rps?: number;
            /** Format: character varying */
            portal_application_description?: string;
            /** Format: character varying[] */
            favorite_service_ids?: string[];
            /**
             * Format: character varying
             * @description Hashed secret key for application authentication
             */
            secret_key_hash?: string;
            /** @default false */
            secret_key_required: boolean;
            /** Format: timestamp with time zone */
            deleted_at?: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            created_at: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            updated_at: string;
        };
        /** @description Supported blockchain services from the Pocket Network */
        services: {
            /**
             * Format: character varying
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            service_id: string;
            /** Format: character varying */
            service_name: string;
            /**
             * Format: integer
             * @description Cost in compute units for each relay
             */
            compute_units_per_relay?: number;
            /**
             * Format: character varying[]
             * @description Valid domains for this service
             */
            service_domains: string[];
            /** Format: character varying */
            service_owner_address?: string;
            /**
             * Format: character varying
             * @description Note:
             *     This is a Foreign Key to `networks.network_id`.<fk table='networks' column='network_id'/>
             */
            network_id?: string;
            /** @default false */
            active: boolean;
            /** @default false */
            beta: boolean;
            /** @default false */
            coming_soon: boolean;
            /** @default false */
            quality_fallback_enabled: boolean;
            /** @default false */
            hard_fallback_enabled: boolean;
            /** Format: text */
            svg_icon?: string;
            /** Format: timestamp with time zone */
            deleted_at?: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            created_at: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            updated_at: string;
        };
        /** @description Multi-tenant accounts with plans and billing integration */
        portal_accounts: {
            /**
             * Format: character varying
             * @description Unique identifier for the portal account
             *
             *     Note:
             *     This is a Primary Key.<pk/>
             * @default gen_random_uuid()
             */
            portal_account_id: string;
            /**
             * Format: integer
             * @description Note:
             *     This is a Foreign Key to `organizations.organization_id`.<fk table='organizations' column='organization_id'/>
             */
            organization_id?: number;
            /**
             * Format: character varying
             * @description Note:
             *     This is a Foreign Key to `portal_plans.portal_plan_type`.<fk table='portal_plans' column='portal_plan_type'/>
             */
            portal_plan_type: string;
            /** Format: character varying */
            user_account_name?: string;
            /** Format: character varying */
            internal_account_name?: string;
            /** Format: integer */
            portal_account_user_limit?: number;
            /**
             * Format: public.plan_interval
             * @enum {string}
             */
            portal_account_user_limit_interval?: "day" | "month" | "year";
            /** Format: integer */
            portal_account_user_limit_rps?: number;
            /** Format: character varying */
            billing_type?: string;
            /**
             * Format: character varying
             * @description Stripe subscription identifier for billing
             */
            stripe_subscription_id?: string;
            /** Format: character varying */
            gcp_account_id?: string;
            /** Format: character varying */
            gcp_entitlement_id?: string;
            /** Format: timestamp with time zone */
            deleted_at?: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            created_at: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            updated_at: string;
        };
        /** @description Companies or customer groups that can be attached to Portal Accounts */
        organizations: {
            /**
             * Format: integer
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            organization_id: number;
            /**
             * Format: character varying
             * @description Name of the organization
             */
            organization_name: string;
            /**
             * Format: timestamp with time zone
             * @description Soft delete timestamp
             */
            deleted_at?: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            created_at: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            updated_at: string;
        };
        /** @description Supported blockchain networks (Pocket mainnet, testnet, etc.) */
        networks: {
            /**
             * Format: character varying
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            network_id: string;
        };
        /** @description Onchain gateway information including stake and network details */
        gateways: {
            /**
             * Format: character varying
             * @description Blockchain address of the gateway
             *
             *     Note:
             *     This is a Primary Key.<pk/>
             */
            gateway_address: string;
            /**
             * Format: bigint
             * @description Amount of tokens staked by the gateway
             */
            stake_amount: number;
            /** Format: character varying */
            stake_denom: string;
            /**
             * Format: character varying
             * @description Note:
             *     This is a Foreign Key to `networks.network_id`.<fk table='networks' column='network_id'/>
             */
            network_id: string;
            /** Format: character varying */
            gateway_private_key_hex?: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            created_at: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            updated_at: string;
        };
        /** @description Available endpoint types for each service */
        service_endpoints: {
            /**
             * Format: integer
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            endpoint_id: number;
            /**
             * Format: character varying
             * @description Note:
             *     This is a Foreign Key to `services.service_id`.<fk table='services' column='service_id'/>
             */
            service_id: string;
            /**
             * Format: public.endpoint_type
             * @enum {string}
             */
            endpoint_type?: "cometBFT" | "cosmos" | "REST" | "JSON-RPC" | "WSS" | "gRPC";
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            created_at: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            updated_at: string;
        };
    };
    responses: never;
    parameters: {
        /** @description Preference */
        preferParams: "params=single-object";
        /** @description Preference */
        preferReturn: "return=representation" | "return=minimal" | "return=none";
        /** @description Preference */
        preferCount: "count=none";
        /** @description Preference */
        preferPost: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
        /** @description Filtering Columns */
        select: string;
        /** @description On Conflict */
        on_conflict: string;
        /** @description Ordering */
        order: string;
        /** @description Limiting and Pagination */
        range: string;
        /** @description Limiting and Pagination */
        rangeUnit: string;
        /** @description Limiting and Pagination */
        offset: string;
        /** @description Limiting and Pagination */
        limit: string;
        "rowFilter.service_fallbacks.service_fallback_id": string;
        "rowFilter.service_fallbacks.service_id": string;
        "rowFilter.service_fallbacks.fallback_url": string;
        "rowFilter.service_fallbacks.created_at": string;
        "rowFilter.service_fallbacks.updated_at": string;
        "rowFilter.portal_plans.portal_plan_type": string;
        "rowFilter.portal_plans.portal_plan_type_description": string;
        /** @description Maximum usage allowed within the interval */
        "rowFilter.portal_plans.plan_usage_limit": string;
        "rowFilter.portal_plans.plan_usage_limit_interval": string;
        /** @description Rate limit in requests per second */
        "rowFilter.portal_plans.plan_rate_limit_rps": string;
        "rowFilter.portal_plans.plan_application_limit": string;
        /** @description Blockchain address of the application */
        "rowFilter.applications.application_address": string;
        "rowFilter.applications.gateway_address": string;
        "rowFilter.applications.service_id": string;
        "rowFilter.applications.stake_amount": string;
        "rowFilter.applications.stake_denom": string;
        "rowFilter.applications.application_private_key_hex": string;
        "rowFilter.applications.network_id": string;
        "rowFilter.applications.created_at": string;
        "rowFilter.applications.updated_at": string;
        "rowFilter.portal_applications.portal_application_id": string;
        "rowFilter.portal_applications.portal_account_id": string;
        "rowFilter.portal_applications.portal_application_name": string;
        "rowFilter.portal_applications.emoji": string;
        "rowFilter.portal_applications.portal_application_user_limit": string;
        "rowFilter.portal_applications.portal_application_user_limit_interval": string;
        "rowFilter.portal_applications.portal_application_user_limit_rps": string;
        "rowFilter.portal_applications.portal_application_description": string;
        "rowFilter.portal_applications.favorite_service_ids": string;
        /** @description Hashed secret key for application authentication */
        "rowFilter.portal_applications.secret_key_hash": string;
        "rowFilter.portal_applications.secret_key_required": string;
        "rowFilter.portal_applications.deleted_at": string;
        "rowFilter.portal_applications.created_at": string;
        "rowFilter.portal_applications.updated_at": string;
        "rowFilter.services.service_id": string;
        "rowFilter.services.service_name": string;
        /** @description Cost in compute units for each relay */
        "rowFilter.services.compute_units_per_relay": string;
        /** @description Valid domains for this service */
        "rowFilter.services.service_domains": string;
        "rowFilter.services.service_owner_address": string;
        "rowFilter.services.network_id": string;
        "rowFilter.services.active": string;
        "rowFilter.services.beta": string;
        "rowFilter.services.coming_soon": string;
        "rowFilter.services.quality_fallback_enabled": string;
        "rowFilter.services.hard_fallback_enabled": string;
        "rowFilter.services.svg_icon": string;
        "rowFilter.services.deleted_at": string;
        "rowFilter.services.created_at": string;
        "rowFilter.services.updated_at": string;
        /** @description Unique identifier for the portal account */
        "rowFilter.portal_accounts.portal_account_id": string;
        "rowFilter.portal_accounts.organization_id": string;
        "rowFilter.portal_accounts.portal_plan_type": string;
        "rowFilter.portal_accounts.user_account_name": string;
        "rowFilter.portal_accounts.internal_account_name": string;
        "rowFilter.portal_accounts.portal_account_user_limit": string;
        "rowFilter.portal_accounts.portal_account_user_limit_interval": string;
        "rowFilter.portal_accounts.portal_account_user_limit_rps": string;
        "rowFilter.portal_accounts.billing_type": string;
        /** @description Stripe subscription identifier for billing */
        "rowFilter.portal_accounts.stripe_subscription_id": string;
        "rowFilter.portal_accounts.gcp_account_id": string;
        "rowFilter.portal_accounts.gcp_entitlement_id": string;
        "rowFilter.portal_accounts.deleted_at": string;
        "rowFilter.portal_accounts.created_at": string;
        "rowFilter.portal_accounts.updated_at": string;
        "rowFilter.organizations.organization_id": string;
        /** @description Name of the organization */
        "rowFilter.organizations.organization_name": string;
        /** @description Soft delete timestamp */
        "rowFilter.organizations.deleted_at": string;
        "rowFilter.organizations.created_at": string;
        "rowFilter.organizations.updated_at": string;
        "rowFilter.networks.network_id": string;
        /** @description Blockchain address of the gateway */
        "rowFilter.gateways.gateway_address": string;
        /** @description Amount of tokens staked by the gateway */
        "rowFilter.gateways.stake_amount": string;
        "rowFilter.gateways.stake_denom": string;
        "rowFilter.gateways.network_id": string;
        "rowFilter.gateways.gateway_private_key_hex": string;
        "rowFilter.gateways.created_at": string;
        "rowFilter.gateways.updated_at": string;
        "rowFilter.service_endpoints.endpoint_id": string;
        "rowFilter.service_endpoints.service_id": string;
        "rowFilter.service_endpoints.endpoint_type": string;
        "rowFilter.service_endpoints.created_at": string;
        "rowFilter.service_endpoints.updated_at": string;
    };
    requestBodies: {
        /** @description portal_accounts */
        portal_accounts: {
            content: {
                "application/json": components["schemas"]["portal_accounts"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["portal_accounts"];
                "application/vnd.pgrst.object+json": components["schemas"]["portal_accounts"];
                "text/csv": components["schemas"]["portal_accounts"];
            };
        };
        /** @description networks */
        networks: {
            content: {
                "application/json": components["schemas"]["networks"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["networks"];
                "application/vnd.pgrst.object+json": components["schemas"]["networks"];
                "text/csv": components["schemas"]["networks"];
            };
        };
        /** @description gateways */
        gateways: {
            content: {
                "application/json": components["schemas"]["gateways"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["gateways"];
                "application/vnd.pgrst.object+json": components["schemas"]["gateways"];
                "text/csv": components["schemas"]["gateways"];
            };
        };
        /** @description service_endpoints */
        service_endpoints: {
            content: {
                "application/json": components["schemas"]["service_endpoints"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["service_endpoints"];
                "application/vnd.pgrst.object+json": components["schemas"]["service_endpoints"];
                "text/csv": components["schemas"]["service_endpoints"];
            };
        };
        /** @description portal_applications */
        portal_applications: {
            content: {
                "application/json": components["schemas"]["portal_applications"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["portal_applications"];
                "application/vnd.pgrst.object+json": components["schemas"]["portal_applications"];
                "text/csv": components["schemas"]["portal_applications"];
            };
        };
        /** @description service_fallbacks */
        service_fallbacks: {
            content: {
                "application/json": components["schemas"]["service_fallbacks"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["service_fallbacks"];
                "application/vnd.pgrst.object+json": components["schemas"]["service_fallbacks"];
                "text/csv": components["schemas"]["service_fallbacks"];
            };
        };
        /** @description portal_plans */
        portal_plans: {
            content: {
                "application/json": components["schemas"]["portal_plans"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["portal_plans"];
                "application/vnd.pgrst.object+json": components["schemas"]["portal_plans"];
                "text/csv": components["schemas"]["portal_plans"];
            };
        };
        /** @description applications */
        applications: {
            content: {
                "application/json": components["schemas"]["applications"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["applications"];
                "application/vnd.pgrst.object+json": components["schemas"]["applications"];
                "text/csv": components["schemas"]["applications"];
            };
        };
        /** @description services */
        services: {
            content: {
                "application/json": components["schemas"]["services"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["services"];
                "application/vnd.pgrst.object+json": components["schemas"]["services"];
                "text/csv": components["schemas"]["services"];
            };
        };
        /** @description organizations */
        organizations: {
            content: {
                "application/json": components["schemas"]["organizations"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["organizations"];
                "application/vnd.pgrst.object+json": components["schemas"]["organizations"];
                "text/csv": components["schemas"]["organizations"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
