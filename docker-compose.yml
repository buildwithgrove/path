services:
  envoy_proxy:
    container_name: envoy_proxy
    build:
      context: .
      dockerfile: Dockerfile.envoy
    ports:
      - "8080:8080"
    depends_on:
      path_gateway:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - path_network

  path_gateway:
    container_name: path_gateway
    build:
      context: .
      args:
        IMAGE_TAG: ${IMAGE_TAG:-development}
    volumes:
      - ./cmd/.config.yaml:/app/.config.yaml
    command: ["./path"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      db:
        condition: service_healthy
    networks:
      - path_network

  # This DB container is provided for local development. It is not recommended
  # for production use. Operator should set up their own secure DB instance.
  db:
    image: postgres:latest
    container_name: db
    restart: always
    ports:
      - 5432:5432
    volumes:
      # Initializes the database with the minimum required tables from the base schema.
      - ./envoy/authorizer_plugin/db/postgres/sqlc/schema.sql:/docker-entrypoint-initdb.d/init.sql
      # For local development, persist the database data in a .gitignore'd tmp directory.
      - ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      retries: 3
    networks:
      - path_network

networks:
  path_network:
